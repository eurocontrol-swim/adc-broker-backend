{
    "request": {
        "type": "list"
    },
    "value": {
        "JMImplementation": {
            "type=MBeanServerDelegate": {
                "attr": {
                    "ImplementationName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The JMX implementation name (the name of this product)"
                    },
                    "MBeanServerId": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The MBean server agent identification"
                    },
                    "ImplementationVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The JMX implementation version (the version of this product)."
                    },
                    "SpecificationVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The version of the JMX specification implemented by this product."
                    },
                    "SpecificationVendor": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The vendor of the JMX specification implemented by this product."
                    },
                    "SpecificationName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "The full name of the JMX specification implemented by this product."
                    },
                    "ImplementationVendor": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "the JMX implementation vendor (the vendor of this product)."
                    }
                },
                "class": "javax.management.MBeanServerDelegate",
                "desc": "Represents  the MBean server from the management point of view."
            }
        },
        "org.apache.activemq.artemis": {
            "address=\"DLQ\",broker=\"0.0.0.0\",component=addresses": {
                "op": {
                    "resume": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resumes the queues bound to this address"
                    },
                    "clearDuplicateIdCache": {
                        "args": [],
                        "ret": "boolean",
                        "desc": "clearDuplicateIdCache"
                    },
                    "sendMessage": [
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                },
                                {
                                    "name": "createMessageId",
                                    "type": "boolean",
                                    "desc": "whether or not to auto generate a Message ID"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        },
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        }
                    ],
                    "purge": {
                        "args": [],
                        "ret": "long",
                        "desc": "Purges the queues bound to this address. Returns the total number of messages purged."
                    },
                    "pause": [
                        {
                            "args": [],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        },
                        {
                            "args": [
                                {
                                    "name": "persist",
                                    "type": "boolean",
                                    "desc": "if true, the pause state will be persisted."
                                }
                            ],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        }
                    ]
                },
                "attr": {
                    "RoutingTypesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Get the routing types enabled on this address as JSON"
                    },
                    "RetroactiveResource": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is used for a retroactive address"
                    },
                    "Address": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "managed address"
                    },
                    "NumberOfBytesPerPage": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of bytes used by each page for this address"
                    },
                    "AddressSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the number of estimated bytes being used by all the queue(s) bound to this address; used to control paging and blocking"
                    },
                    "CurrentDuplicateIdCacheSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the size of the duplicate ID cache for this address"
                    },
                    "Internal": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created for the broker's internal use"
                    },
                    "Paging": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is paging"
                    },
                    "Roles": {
                        "rw": false,
                        "type": "[Ljava.lang.Object;",
                        "desc": "roles (name and permissions) associated with this address"
                    },
                    "RolesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "roles  (name and permissions) associated with this address using JSON serialization"
                    },
                    "BindingNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of all bindings (both queues and diverts) bound to this address"
                    },
                    "NumberOfPages": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of pages used by this address"
                    },
                    "UnRoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages not routed to any bindings"
                    },
                    "AllQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of both the local & remote queue(s) bound to this address"
                    },
                    "QueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the local queue(s) bound to this address"
                    },
                    "Temporary": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is temporary"
                    },
                    "AutoCreated": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created automatically in response to client action"
                    },
                    "RoutingTypes": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Get the routing types enabled on this address"
                    },
                    "NumberOfMessages": {
                        "rw": false,
                        "type": "long",
                        "desc": "the sum of messages on queue(s), including messages in delivery"
                    },
                    "RemoteQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the remote queue(s) bound to this address"
                    },
                    "RoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages routed to one or more bindings"
                    },
                    "MessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages currently in all queues bound to this address (includes scheduled, paged, and in-delivery messages)"
                    },
                    "Paused": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "indicates if the queues bound to this address are paused"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.AddressControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "address=\"ExpiryQueue\",broker=\"0.0.0.0\",component=addresses,queue=\"ExpiryQueue\",routing-type=\"anycast\",subcomponent=queues": {
                "op": {
                    "listMessages": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "[Ljava.util.Map;",
                        "desc": "List all the messages in the queue matching the given filter"
                    },
                    "resetMessagesExpired": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesExpired property"
                    },
                    "listScheduledMessagesAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the messages scheduled for delivery and returns them using JSON"
                    },
                    "moveMessage": [
                        {
                            "args": [
                                {
                                    "name": "messageID",
                                    "type": "long",
                                    "desc": "A message ID"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the message to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Move the message corresponding to the given messageID to another queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "messageID",
                                    "type": "long",
                                    "desc": "A message ID"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the message to"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Move the message corresponding to the given messageID to another queue. rejectDuplicate=false on this case"
                        }
                    ],
                    "moveMessages": [
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages). RejectDuplicates=false on this case."
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                },
                                {
                                    "name": "messageCount",
                                    "type": "int",
                                    "desc": "Number of messages to move."
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        }
                    ],
                    "resetMessageCounter": {
                        "args": [],
                        "ret": "void",
                        "desc": "Reset the message counters"
                    },
                    "sendMessageToDeadLetterAddress": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Send the message corresponding to the given messageID to this queue's Dead Letter Address"
                    },
                    "removeMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Remove the message corresponding to the given messageID"
                    },
                    "listScheduledMessages": {
                        "args": [],
                        "ret": "[Ljava.util.Map;",
                        "desc": "List the messages scheduled for delivery"
                    },
                    "listDeliveringMessages": {
                        "args": [],
                        "ret": "java.util.Map",
                        "desc": "List all messages being delivered per consumer"
                    },
                    "resetMessagesAcknowledged": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesAcknowledged property"
                    },
                    "changeMessagesPriority": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            },
                            {
                                "name": "newPriority",
                                "type": "int",
                                "desc": "the new priority (between 0 and 9)"
                            }
                        ],
                        "ret": "int",
                        "desc": "Change the priority of the messages corresponding to the given filter"
                    },
                    "listMessageCounterHistoryAsHTML": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters history HTML"
                    },
                    "listConsumersAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the existent consumers on the Queue"
                    },
                    "enable": {
                        "args": [],
                        "ret": "void",
                        "desc": "Enables routing of messages to the Queue"
                    },
                    "removeAllMessages": {
                        "args": [],
                        "ret": "int",
                        "desc": "Remove all the messages from the Queue (and returns the number of removed messages)"
                    },
                    "retryMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Retry the message corresponding to the given messageID to the original queue"
                    },
                    "listMessagesAsJSON": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "List all the messages in the queue matching the given filter and returns them using JSON"
                    },
                    "listGroupsAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the existent group to consumers mappings on the Queue"
                    },
                    "removeMessages": [
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "int",
                            "desc": "Remove the messages corresponding to the given filter (and returns the number of removed messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "int",
                            "desc": "Remove the messages corresponding to the given filter (and returns the number of removed messages)"
                        }
                    ],
                    "resume": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resumes delivery of queued messages and gets the queue out of paused state. It will also affected the state of a persisted pause."
                    },
                    "flushExecutor": {
                        "args": [],
                        "ret": "void",
                        "desc": "Flush internal executors"
                    },
                    "countDeliveringMessages": [
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "This filter separate account messages"
                                },
                                {
                                    "name": "groupByProperty",
                                    "type": "java.lang.String",
                                    "desc": "This property to group by"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Returns the number of the messages in the queue matching the given filter, grouped by the given property field"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue matching the given filter"
                        }
                    ],
                    "resetAllGroups": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets all groups"
                    },
                    "countMessages": [
                        {
                            "args": [],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "This filter separate account messages"
                                },
                                {
                                    "name": "groupByProperty",
                                    "type": "java.lang.String",
                                    "desc": "This property to group by"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Returns the number of the messages in the queue matching the given filter, grouped by the given property field"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue matching the given filter"
                        }
                    ],
                    "listMessageCounterAsHTML": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters as HTML"
                    },
                    "resetMessagesKilled": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesKilled property"
                    },
                    "listMessageCounterHistory": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters history"
                    },
                    "sendMessage": [
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected destination."
                        },
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                },
                                {
                                    "name": "createMessageId",
                                    "type": "boolean",
                                    "desc": "whether or not to auto generate a Message ID"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected destination."
                        }
                    ],
                    "listMessageCounter": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters"
                    },
                    "resetMessagesAdded": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesAdded property"
                    },
                    "pause": [
                        {
                            "args": [
                                {
                                    "name": "persist",
                                    "type": "boolean",
                                    "desc": "if true, the pause state will be persisted."
                                }
                            ],
                            "ret": "void",
                            "desc": "Pauses the Queue"
                        },
                        {
                            "args": [],
                            "ret": "void",
                            "desc": "Pauses the Queue"
                        }
                    ],
                    "listDeliveringMessagesAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "list all messages being delivered per consumer using JSON form"
                    },
                    "expireMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Remove the message corresponding to the given messageID"
                    },
                    "resetGroup": {
                        "args": [
                            {
                                "name": "groupID",
                                "type": "java.lang.String",
                                "desc": "ID of group to reset"
                            }
                        ],
                        "ret": "void",
                        "desc": "Reset the specified group"
                    },
                    "changeMessagePriority": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            },
                            {
                                "name": "newPriority",
                                "type": "int",
                                "desc": "the new priority (between 0 and 9)"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Change the priority of the message corresponding to the given messageID"
                    },
                    "disable": {
                        "args": [],
                        "ret": "void",
                        "desc": "Disables routing of messages to the Queue"
                    },
                    "sendMessagesToDeadLetterAddress": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "int",
                        "desc": "Send the messages corresponding to the given filter to this queue's Dead Letter Address"
                    },
                    "retryMessages": {
                        "args": [],
                        "ret": "int",
                        "desc": "Retry all messages on a DLQ to their respective original queues"
                    },
                    "expireMessages": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter"
                            }
                        ],
                        "ret": "int",
                        "desc": "Expire the messages corresponding to the given filter (and returns the number of expired messages)"
                    },
                    "browse": [
                        {
                            "args": [],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "page",
                                    "type": "int",
                                    "desc": "Current page"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page size"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "filter"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "page",
                                    "type": "int",
                                    "desc": "Current page"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page size"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        }
                    ]
                },
                "attr": {
                    "ConfigurationManaged": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "is this queue managed by configuration (broker.xml)"
                    },
                    "Address": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "address this queue is bound to"
                    },
                    "MaxConsumers": {
                        "rw": false,
                        "type": "int",
                        "desc": "maximum number of consumers allowed on this queue at any one time"
                    },
                    "Exclusive": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "If the queue should route exclusively to one consumer"
                    },
                    "DurableDeliveringSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable messages that this queue is currently delivering to its consumers"
                    },
                    "PersistentSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of all messages (including durable and non-durable) currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "GroupBuckets": {
                        "rw": false,
                        "type": "int",
                        "desc": "Get the group buckets"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "name of this queue"
                    },
                    "MessagesKilled": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages removed from this queue since it was created due to exceeding the max delivery attempts"
                    },
                    "DelayBeforeDispatch": {
                        "rw": false,
                        "type": "long",
                        "desc": "Return the Consumers Before Dispatch"
                    },
                    "DurableMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of durable messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "PreparedTransactionMessageCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "return how many messages are stuck in prepared transactions"
                    },
                    "ID": {
                        "rw": false,
                        "type": "long",
                        "desc": "ID of this queue"
                    },
                    "DeadLetterAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "dead-letter address associated with this queue"
                    },
                    "RetroactiveResource": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is used for a retroactive address"
                    },
                    "MessagesAcknowledged": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages acknowledged from this queue since it was created"
                    },
                    "MessagesExpired": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages expired from this queue since it was created"
                    },
                    "DeliveringSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of messages that this queue is currently delivering to its consumers"
                    },
                    "LastValue": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "is this queue a last value queue"
                    },
                    "LastValueKey": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "last value key"
                    },
                    "DurableScheduledSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable scheduled messages in this queue"
                    },
                    "GroupRebalance": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the groups of this queue are automatically rebalanced"
                    },
                    "GroupFirstKey": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Get the header key to notify a consumer of a group change"
                    },
                    "User": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "the user that created the queue"
                    },
                    "GroupCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "Get the current number of active groups"
                    },
                    "PurgeOnNoConsumers": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "purge this queue when the last consumer disconnects"
                    },
                    "ScheduledCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of scheduled messages in this queue"
                    },
                    "DurableScheduledCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of durable scheduled messages in this queue"
                    },
                    "ConsumersBeforeDispatch": {
                        "rw": false,
                        "type": "int",
                        "desc": "Return the Consumers Before Dispatch"
                    },
                    "ExpiryAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "expiry address associated with this queue"
                    },
                    "FirstMessageAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "first message on the queue as JSON"
                    },
                    "GroupRebalancePauseDispatch": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the dispatch is paused when groups of this queue are automatically rebalanced"
                    },
                    "Paused": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the queue is paused"
                    },
                    "RoutingType": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "routing type of this queue"
                    },
                    "DurableDeliveringCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of durable messages that this queue is currently delivering to its consumers"
                    },
                    "FirstMessageAge": {
                        "rw": false,
                        "type": "java.lang.Long",
                        "desc": "age of the first message in milliseconds"
                    },
                    "DurablePersistentSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "MessagesAdded": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages added to this queue since it was created"
                    },
                    "ConsumerCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of consumers consuming messages from this queue"
                    },
                    "RingSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "Get the ring size"
                    },
                    "DeliveringCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of messages that this queue is currently delivering to its consumers"
                    },
                    "Enabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "if the queue is enabled, default it is enabled, when disabled messages will not be routed to the queue"
                    },
                    "AcknowledgeAttempts": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages acknowledged attempts from this queue since it was created"
                    },
                    "Temporary": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is temporary"
                    },
                    "FirstMessageTimestamp": {
                        "rw": false,
                        "type": "java.lang.Long",
                        "desc": "timestamp of the first message in milliseconds"
                    },
                    "Filter": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "filter associated with this queue"
                    },
                    "ScheduledSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of scheduled messages in this queue"
                    },
                    "Durable": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is durable"
                    },
                    "MessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.QueueControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "address=\"activemq.notifications\",broker=\"0.0.0.0\",component=addresses": {
                "op": {
                    "resume": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resumes the queues bound to this address"
                    },
                    "clearDuplicateIdCache": {
                        "args": [],
                        "ret": "boolean",
                        "desc": "clearDuplicateIdCache"
                    },
                    "sendMessage": [
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                },
                                {
                                    "name": "createMessageId",
                                    "type": "boolean",
                                    "desc": "whether or not to auto generate a Message ID"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        },
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        }
                    ],
                    "purge": {
                        "args": [],
                        "ret": "long",
                        "desc": "Purges the queues bound to this address. Returns the total number of messages purged."
                    },
                    "pause": [
                        {
                            "args": [],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        },
                        {
                            "args": [
                                {
                                    "name": "persist",
                                    "type": "boolean",
                                    "desc": "if true, the pause state will be persisted."
                                }
                            ],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        }
                    ]
                },
                "attr": {
                    "RoutingTypesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Get the routing types enabled on this address as JSON"
                    },
                    "RetroactiveResource": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is used for a retroactive address"
                    },
                    "Address": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "managed address"
                    },
                    "NumberOfBytesPerPage": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of bytes used by each page for this address"
                    },
                    "AddressSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the number of estimated bytes being used by all the queue(s) bound to this address; used to control paging and blocking"
                    },
                    "CurrentDuplicateIdCacheSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the size of the duplicate ID cache for this address"
                    },
                    "Internal": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created for the broker's internal use"
                    },
                    "Paging": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is paging"
                    },
                    "Roles": {
                        "rw": false,
                        "type": "[Ljava.lang.Object;",
                        "desc": "roles (name and permissions) associated with this address"
                    },
                    "RolesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "roles  (name and permissions) associated with this address using JSON serialization"
                    },
                    "BindingNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of all bindings (both queues and diverts) bound to this address"
                    },
                    "NumberOfPages": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of pages used by this address"
                    },
                    "UnRoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages not routed to any bindings"
                    },
                    "AllQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of both the local & remote queue(s) bound to this address"
                    },
                    "QueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the local queue(s) bound to this address"
                    },
                    "Temporary": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is temporary"
                    },
                    "AutoCreated": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created automatically in response to client action"
                    },
                    "RoutingTypes": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Get the routing types enabled on this address"
                    },
                    "NumberOfMessages": {
                        "rw": false,
                        "type": "long",
                        "desc": "the sum of messages on queue(s), including messages in delivery"
                    },
                    "RemoteQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the remote queue(s) bound to this address"
                    },
                    "RoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages routed to one or more bindings"
                    },
                    "MessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages currently in all queues bound to this address (includes scheduled, paged, and in-delivery messages)"
                    },
                    "Paused": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "indicates if the queues bound to this address are paused"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.AddressControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "broker=\"0.0.0.0\",component=acceptors,name=\"clients\"": {
                "op": {
                    "reload": {
                        "args": [],
                        "ret": "void",
                        "desc": "Re-create the acceptor with the existing configuration values. Useful, for example, for reloading key\/trust stores on acceptors which support SSL."
                    },
                    "stop": {
                        "args": [],
                        "ret": "void",
                        "desc": "stops this component"
                    },
                    "start": {
                        "args": [],
                        "ret": "void",
                        "desc": "starts this component"
                    }
                },
                "attr": {
                    "FactoryClassName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "class name of the AcceptorFactory implementation used by this acceptor"
                    },
                    "Started": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this component is started"
                    },
                    "Parameters": {
                        "rw": false,
                        "type": "java.util.Map",
                        "desc": "parameters used to configure this acceptor"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "name of the acceptor"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.AcceptorControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "broker=\"0.0.0.0\"": {
                "op": {
                    "removeAddressSettings": {
                        "args": [
                            {
                                "name": "addressMatch",
                                "type": "java.lang.String",
                                "desc": "an address match"
                            }
                        ],
                        "ret": "void",
                        "desc": "Remove address settings"
                    },
                    "listSessions": [
                        {
                            "args": [
                                {
                                    "name": "options",
                                    "type": "java.lang.String",
                                    "desc": "Options"
                                },
                                {
                                    "name": "pageNumber",
                                    "type": "int",
                                    "desc": "Page Number"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page Size"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Search for Sessions"
                        },
                        {
                            "args": [
                                {
                                    "name": "connectionID",
                                    "type": "java.lang.String",
                                    "desc": "a connection ID"
                                }
                            ],
                            "ret": "[Ljava.lang.String;",
                            "desc": "List the sessions for the given connectionID"
                        }
                    ],
                    "scaleDown": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "The connector to use to scale down, if not provided the first appropriate connector will be used"
                            }
                        ],
                        "ret": "void",
                        "desc": "Force the server to stop and to scale down to another server"
                    },
                    "stopBrokerConnection": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the broker connection to be stopped"
                            }
                        ],
                        "ret": "void",
                        "desc": "Stops a broker connection that is pre configured"
                    },
                    "addUser": {
                        "args": [
                            {
                                "name": "username",
                                "type": "java.lang.String",
                                "desc": "Name of the user"
                            },
                            {
                                "name": "password",
                                "type": "java.lang.String",
                                "desc": "User's password"
                            },
                            {
                                "name": "roles",
                                "type": "java.lang.String",
                                "desc": "User's role (comma separated)"
                            },
                            {
                                "name": "plaintext",
                                "type": "boolean",
                                "desc": "whether or not to store the password in plaintext or hash it"
                            }
                        ],
                        "ret": "void",
                        "desc": "add a user (only applicable when using the JAAS PropertiesLoginModule or the ActiveMQBasicSecurityManager)"
                    },
                    "updateAddress": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "The name of the address"
                            },
                            {
                                "name": "routingTypes",
                                "type": "java.lang.String",
                                "desc": "Comma separated list of Routing Types (ANYCAST\/MULTICAST)"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Update an address"
                    },
                    "resetAllMessageCounters": {
                        "args": [],
                        "ret": "void",
                        "desc": "Reset all message counters"
                    },
                    "listConnectionIDs": {
                        "args": [],
                        "ret": "[Ljava.lang.String;",
                        "desc": "List all the connection IDs"
                    },
                    "addSecuritySettings": [
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "send",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send messages"
                                },
                                {
                                    "name": "consume",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to consume messages"
                                },
                                {
                                    "name": "createDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create durable queues"
                                },
                                {
                                    "name": "deleteDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete durable queues"
                                },
                                {
                                    "name": "createNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create non durable queues"
                                },
                                {
                                    "name": "deleteNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete non durable queues"
                                },
                                {
                                    "name": "manage",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send management messages messages"
                                },
                                {
                                    "name": "browse",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to browse queues"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add security settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "send",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send messages"
                                },
                                {
                                    "name": "consume",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to consume messages"
                                },
                                {
                                    "name": "createDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create durable queues"
                                },
                                {
                                    "name": "deleteDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete durable queues"
                                },
                                {
                                    "name": "createNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create non durable queues"
                                },
                                {
                                    "name": "deleteNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete non durable queues"
                                },
                                {
                                    "name": "manage",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send management messages messages"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add security settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "send",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send messages"
                                },
                                {
                                    "name": "consume",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to consume messages"
                                },
                                {
                                    "name": "createDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create durable queues"
                                },
                                {
                                    "name": "deleteDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete durable queues"
                                },
                                {
                                    "name": "createNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create non durable queues"
                                },
                                {
                                    "name": "deleteNonDurableQueueRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete non durable queues"
                                },
                                {
                                    "name": "manage",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to send management messages messages"
                                },
                                {
                                    "name": "browse",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to browse queues"
                                },
                                {
                                    "name": "createAddressRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to create addresses"
                                },
                                {
                                    "name": "deleteAddressRoles",
                                    "type": "java.lang.String",
                                    "desc": "a comma-separated list of roles allowed to delete addresses"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add security settings for addresses matching the addressMatch"
                        }
                    ],
                    "createDivert": [
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the divert"
                                },
                                {
                                    "name": "routingName",
                                    "type": "java.lang.String",
                                    "desc": "Routing name of the divert"
                                },
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert from"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert to"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "Is the divert exclusive?"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the divert"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the divert's transformer"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "How should the routing-type on the diverted messages be set?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Divert"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the divert"
                                },
                                {
                                    "name": "routingName",
                                    "type": "java.lang.String",
                                    "desc": "Routing name of the divert"
                                },
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert from"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert to"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "Is the divert exclusive?"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the divert"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the divert's transformer"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Divert"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the divert"
                                },
                                {
                                    "name": "routingName",
                                    "type": "java.lang.String",
                                    "desc": "Routing name of the divert"
                                },
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert from"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert to"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "Is the divert exclusive?"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the divert"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the divert's transformer"
                                },
                                {
                                    "name": "transformerProperties",
                                    "type": "java.util.Map",
                                    "desc": "Configuration properties of the divert's transformer"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "How should the routing-type on the diverted messages be set?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Divert"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the divert"
                                },
                                {
                                    "name": "routingName",
                                    "type": "java.lang.String",
                                    "desc": "Routing name of the divert"
                                },
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert from"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Address to divert to"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "Is the divert exclusive?"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the divert"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the divert's transformer"
                                },
                                {
                                    "name": "transformerPropertiesAsJSON",
                                    "type": "java.lang.String",
                                    "desc": "Configuration properties of the divert's transformer in JSON form"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "How should the routing-type on the diverted messages be set?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Divert"
                        }
                    ],
                    "getRolesAsJSON": {
                        "args": [
                            {
                                "name": "addressMatch",
                                "type": "java.lang.String",
                                "desc": "an address match"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Get roles (as a JSON string) for a specific address match"
                    },
                    "enableMessageCounters": {
                        "args": [],
                        "ret": "void",
                        "desc": "Enable message counters"
                    },
                    "closeConsumerWithID": {
                        "args": [
                            {
                                "name": "sessionID",
                                "type": "java.lang.String",
                                "desc": "The session ID"
                            },
                            {
                                "name": "ID",
                                "type": "java.lang.String",
                                "desc": "The consumer ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes the consumer with the id"
                    },
                    "removeUser": {
                        "args": [
                            {
                                "name": "username",
                                "type": "java.lang.String",
                                "desc": "Name of the user"
                            }
                        ],
                        "ret": "void",
                        "desc": "remove a user (only applicable when using the JAAS PropertiesLoginModule or the ActiveMQBasicSecurityManager)"
                    },
                    "listConsumersAsJSON": {
                        "args": [
                            {
                                "name": "connectionID",
                                "type": "java.lang.String",
                                "desc": "a connection ID"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "List all consumers associated with a connection as a JSON string"
                    },
                    "reloadConfigurationFile": {
                        "args": [],
                        "ret": "void",
                        "desc": "forces the broker to reload its configuration file"
                    },
                    "listHeuristicCommittedTransactions": {
                        "args": [],
                        "ret": "[Ljava.lang.String;",
                        "desc": "List transactions which have been heuristically committed"
                    },
                    "listRemoteAddresses": [
                        {
                            "args": [
                                {
                                    "name": "ipAddress",
                                    "type": "java.lang.String",
                                    "desc": "an IP address"
                                }
                            ],
                            "ret": "[Ljava.lang.String;",
                            "desc": "List the client addresses which match the given IP Address"
                        },
                        {
                            "args": [],
                            "ret": "[Ljava.lang.String;",
                            "desc": "List the client addresses"
                        }
                    ],
                    "resetUser": [
                        {
                            "args": [
                                {
                                    "name": "username",
                                    "type": "java.lang.String",
                                    "desc": "Name of the user"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User's password"
                                },
                                {
                                    "name": "roles",
                                    "type": "java.lang.String",
                                    "desc": "User's role (comma separated)"
                                }
                            ],
                            "ret": "void",
                            "desc": "set new properties on an existing user (only applicable when using the JAAS PropertiesLoginModule or the ActiveMQBasicSecurityManager)"
                        },
                        {
                            "args": [
                                {
                                    "name": "username",
                                    "type": "java.lang.String",
                                    "desc": "Name of the user"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User's password"
                                },
                                {
                                    "name": "roles",
                                    "type": "java.lang.String",
                                    "desc": "User's role (comma separated)"
                                },
                                {
                                    "name": "plaintext",
                                    "type": "boolean",
                                    "desc": "whether or not to store the password in plaintext or hash it"
                                }
                            ],
                            "ret": "void",
                            "desc": "set new properties on an existing user (only applicable when using the JAAS PropertiesLoginModule or the ActiveMQBasicSecurityManager)"
                        }
                    ],
                    "listBrokerConnections": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the existing broker connections"
                    },
                    "updateDivert": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the queue"
                            },
                            {
                                "name": "forwardingAddress",
                                "type": "java.lang.String",
                                "desc": "Address to divert to"
                            },
                            {
                                "name": "filterString",
                                "type": "java.lang.String",
                                "desc": "Filter of the divert"
                            },
                            {
                                "name": "transformerClassName",
                                "type": "java.lang.String",
                                "desc": "Class name of the divert's transformer"
                            },
                            {
                                "name": "transformerProperties",
                                "type": "java.util.Map",
                                "desc": "Configuration properties of the divert's transformer"
                            },
                            {
                                "name": "routingType",
                                "type": "java.lang.String",
                                "desc": "How should the routing-type on the diverted messages be set?"
                            }
                        ],
                        "ret": "void",
                        "desc": "Update a divert"
                    },
                    "listAddresses": [
                        {
                            "args": [
                                {
                                    "name": "options",
                                    "type": "java.lang.String",
                                    "desc": "Options"
                                },
                                {
                                    "name": "pageNumber",
                                    "type": "int",
                                    "desc": "Page Number"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page Size"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Search for Addresses"
                        },
                        {
                            "args": [
                                {
                                    "name": "separator",
                                    "type": "java.lang.String",
                                    "desc": "Separator used on the string listing"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "List Addresses on the broker"
                        }
                    ],
                    "getRoles": {
                        "args": [
                            {
                                "name": "addressMatch",
                                "type": "java.lang.String",
                                "desc": "an address match"
                            }
                        ],
                        "ret": "[Ljava.lang.Object;",
                        "desc": "Get roles for a specific address match"
                    },
                    "listQueues": {
                        "args": [
                            {
                                "name": "options",
                                "type": "java.lang.String",
                                "desc": "Options"
                            },
                            {
                                "name": "pageNumber",
                                "type": "int",
                                "desc": "Page Number"
                            },
                            {
                                "name": "pageSize",
                                "type": "int",
                                "desc": "Page Size"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Search for Queues"
                    },
                    "listDivertNames": {
                        "args": [],
                        "ret": "[Ljava.lang.String;",
                        "desc": "names of the diverts deployed on this server"
                    },
                    "createAddress": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "The name of the address"
                            },
                            {
                                "name": "routingTypes",
                                "type": "java.lang.String",
                                "desc": "Comma separated list of Routing Types (ANYCAST\/MULTICAST)"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Create an address"
                    },
                    "commitPreparedTransaction": {
                        "args": [
                            {
                                "name": "transactionAsBase64",
                                "type": "java.lang.String",
                                "desc": "the Base64 representation of a transaction"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Commit a prepared transaction"
                    },
                    "deleteAddress": [
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "The name of the address"
                                },
                                {
                                    "name": "force",
                                    "type": "boolean",
                                    "desc": "Force consumers and queues out"
                                }
                            ],
                            "ret": "void",
                            "desc": "Delete an address"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "The name of the address"
                                }
                            ],
                            "ret": "void",
                            "desc": "Delete an address"
                        }
                    ],
                    "replay": [
                        {
                            "args": [
                                {
                                    "name": "startScanDate",
                                    "type": "java.lang.String",
                                    "desc": "Start date where we will start scanning for journals to replay. Format YYYYMMDDHHMMSS"
                                },
                                {
                                    "name": "endScanDate",
                                    "type": "java.lang.String",
                                    "desc": "Finish date where we will stop scannning for journals to replay. Format YYYYMMDDHHMMSS"
                                },
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Name of the address to replay"
                                },
                                {
                                    "name": "target",
                                    "type": "java.lang.String",
                                    "desc": "Where the replay data should be sent"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter to apply on message selection. Null means everything matching the address"
                                }
                            ],
                            "ret": "void",
                            "desc": "Makes the broker to read messages from the retention folder matching the address and filter."
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Name of the address to replay"
                                },
                                {
                                    "name": "target",
                                    "type": "java.lang.String",
                                    "desc": "Where the replay data should be sent"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter to apply on message selection. Null means everything matching the address"
                                }
                            ],
                            "ret": "void",
                            "desc": "Makes the broker to read messages from the retention folder matching the address and filter."
                        }
                    ],
                    "listPreparedTransactionDetailsAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the prepared transaction, sorted by date, oldest first, with details, in JSON format"
                    },
                    "resetAllMessageCounterHistories": {
                        "args": [],
                        "ret": "void",
                        "desc": "Reset all message counters history"
                    },
                    "getAddressInfo": {
                        "args": [
                            {
                                "name": "address",
                                "type": "java.lang.String",
                                "desc": "The address"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Get the selected address"
                    },
                    "listNetworkTopology": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the Network Topology"
                    },
                    "closeSessionWithID": {
                        "args": [
                            {
                                "name": "connectionID",
                                "type": "java.lang.String",
                                "desc": "The connection ID"
                            },
                            {
                                "name": "ID",
                                "type": "java.lang.String",
                                "desc": "The session ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes the session with the id"
                    },
                    "createQueue": [
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue with the specified address, name and durability"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue with the specified address, name and durability"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue with the specified address"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue with the specified address"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "int",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "int",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "groupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "Key used to mark a message is first in a group for a consumer"
                                },
                                {
                                    "name": "lastValue",
                                    "type": "boolean",
                                    "desc": "Use last-value semantics"
                                },
                                {
                                    "name": "lastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "Use the specified property key for the last value"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "autoDelete",
                                    "type": "boolean",
                                    "desc": "If the queue should be deleted once no consumers"
                                },
                                {
                                    "name": "autoDeleteDelay",
                                    "type": "long",
                                    "desc": "How long to wait (in milliseconds) before deleting auto-created queues after the queue has 0 consumers"
                                },
                                {
                                    "name": "autoDeleteMessageCount",
                                    "type": "long",
                                    "desc": "The message count the queue must be at or below before it can be evaluated to be auto deleted, 0 waits until empty queue (default) and -1 disables this check"
                                },
                                {
                                    "name": "autoCreateAddress",
                                    "type": "boolean",
                                    "desc": "Create an address with default values should a matching address not be found"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "int",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "int",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "groupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "Key used to mark a message is first in a group for a consumer"
                                },
                                {
                                    "name": "lastValue",
                                    "type": "boolean",
                                    "desc": "Use last-value semantics"
                                },
                                {
                                    "name": "lastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "Use the specified property key for the last value"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "autoDelete",
                                    "type": "boolean",
                                    "desc": "If the queue should be deleted once no consumers"
                                },
                                {
                                    "name": "autoDeleteDelay",
                                    "type": "long",
                                    "desc": "How long to wait (in milliseconds) before deleting auto-created queues after the queue has 0 consumers"
                                },
                                {
                                    "name": "autoDeleteMessageCount",
                                    "type": "long",
                                    "desc": "The message count the queue must be at or below before it can be evaluated to be auto deleted, 0 waits until empty queue (default) and -1 disables this check"
                                },
                                {
                                    "name": "autoCreateAddress",
                                    "type": "boolean",
                                    "desc": "Create an address with default values should a matching address not be found"
                                },
                                {
                                    "name": "ringSize",
                                    "type": "long",
                                    "desc": "The size this queue should maintain according to ring semantics"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "int",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "autoCreateAddress",
                                    "type": "boolean",
                                    "desc": "Create an address with default values should a matching address not be found"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "queueConfiguration",
                                    "type": "java.lang.String",
                                    "desc": "the configuration of the queue in JSON format"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "queueConfiguration",
                                    "type": "java.lang.String",
                                    "desc": "the configuration of the queue in JSON format"
                                },
                                {
                                    "name": "ignoreIfExists",
                                    "type": "boolean",
                                    "desc": "whether or not to try to create the queue if it exists already"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "int",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "int",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "lastValue",
                                    "type": "boolean",
                                    "desc": "Use last-value semantics"
                                },
                                {
                                    "name": "lastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "Use the specified property key for the last value"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "autoDelete",
                                    "type": "boolean",
                                    "desc": "If the queue should be deleted once no consumers"
                                },
                                {
                                    "name": "autoDeleteDelay",
                                    "type": "long",
                                    "desc": "How long to wait (in milliseconds) before deleting auto-created queues after the queue has 0 consumers"
                                },
                                {
                                    "name": "autoDeleteMessageCount",
                                    "type": "long",
                                    "desc": "The message count the queue must be at or below before it can be evaluated to be auto deleted, 0 waits until empty queue (default) and -1 disables this check"
                                },
                                {
                                    "name": "autoCreateAddress",
                                    "type": "boolean",
                                    "desc": "Create an address with default values should a matching address not be found"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "int",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "int",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "lastValue",
                                    "type": "boolean",
                                    "desc": "Use last-value semantics"
                                },
                                {
                                    "name": "lastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "Use the specified property key for the last value"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "autoCreateAddress",
                                    "type": "boolean",
                                    "desc": "Create an address with default values should a matching address not be found"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Create a queue"
                        }
                    ],
                    "listUser": {
                        "args": [
                            {
                                "name": "username",
                                "type": "java.lang.String",
                                "desc": "Name of the user; leave null to list all known users"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "list info about a user or all users if no username is supplied (only applicable when using the JAAS PropertiesLoginModule or the ActiveMQBasicSecurityManager)"
                    },
                    "rollbackPreparedTransaction": {
                        "args": [
                            {
                                "name": "transactionAsBase64",
                                "type": "java.lang.String",
                                "desc": "the Base64 representation of a transaction"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Rollback a prepared transaction"
                    },
                    "listConsumers": {
                        "args": [
                            {
                                "name": "options",
                                "type": "java.lang.String",
                                "desc": "Options"
                            },
                            {
                                "name": "pageNumber",
                                "type": "int",
                                "desc": "Page Number"
                            },
                            {
                                "name": "pageSize",
                                "type": "int",
                                "desc": "Page Size"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Search for Consumers"
                    },
                    "createBridge": [
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the bridge"
                                },
                                {
                                    "name": "queueName",
                                    "type": "java.lang.String",
                                    "desc": "Name of the source queue"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Forwarding address"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the bridge"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the bridge transformer"
                                },
                                {
                                    "name": "retryInterval",
                                    "type": "long",
                                    "desc": "Connection retry interval"
                                },
                                {
                                    "name": "retryIntervalMultiplier",
                                    "type": "double",
                                    "desc": "Connection retry interval multiplier"
                                },
                                {
                                    "name": "initialConnectAttempts",
                                    "type": "int",
                                    "desc": "Number of initial connection attempts"
                                },
                                {
                                    "name": "reconnectAttempts",
                                    "type": "int",
                                    "desc": "Number of reconnection attempts"
                                },
                                {
                                    "name": "useDuplicateDetection",
                                    "type": "boolean",
                                    "desc": "Use duplicate detection"
                                },
                                {
                                    "name": "confirmationWindowSize",
                                    "type": "int",
                                    "desc": "Confirmation window size"
                                },
                                {
                                    "name": "producerWindowSize",
                                    "type": "int",
                                    "desc": "Producer window size"
                                },
                                {
                                    "name": "clientFailureCheckPeriod",
                                    "type": "long",
                                    "desc": "Period to check client failure"
                                },
                                {
                                    "name": "staticConnectorNames",
                                    "type": "java.lang.String",
                                    "desc": "comma separated list of connector names or name of discovery group if 'useDiscoveryGroup' is set to true"
                                },
                                {
                                    "name": "useDiscoveryGroup",
                                    "type": "boolean",
                                    "desc": "use discovery  group"
                                },
                                {
                                    "name": "ha",
                                    "type": "boolean",
                                    "desc": "Is it using HA"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "User name"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User password"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Bridge"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the bridge"
                                },
                                {
                                    "name": "queueName",
                                    "type": "java.lang.String",
                                    "desc": "Name of the source queue"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Forwarding address"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the bridge"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the bridge transformer"
                                },
                                {
                                    "name": "retryInterval",
                                    "type": "long",
                                    "desc": "Connection retry interval"
                                },
                                {
                                    "name": "retryIntervalMultiplier",
                                    "type": "double",
                                    "desc": "Connection retry interval multiplier"
                                },
                                {
                                    "name": "initialConnectAttempts",
                                    "type": "int",
                                    "desc": "Number of initial connection attempts"
                                },
                                {
                                    "name": "reconnectAttempts",
                                    "type": "int",
                                    "desc": "Number of reconnection attempts"
                                },
                                {
                                    "name": "useDuplicateDetection",
                                    "type": "boolean",
                                    "desc": "Use duplicate detection"
                                },
                                {
                                    "name": "confirmationWindowSize",
                                    "type": "int",
                                    "desc": "Confirmation window size"
                                },
                                {
                                    "name": "clientFailureCheckPeriod",
                                    "type": "long",
                                    "desc": "Period to check client failure"
                                },
                                {
                                    "name": "staticConnectorNames",
                                    "type": "java.lang.String",
                                    "desc": "comma separated list of connector names or name of discovery group if 'useDiscoveryGroup' is set to true"
                                },
                                {
                                    "name": "useDiscoveryGroup",
                                    "type": "boolean",
                                    "desc": "use discovery  group"
                                },
                                {
                                    "name": "ha",
                                    "type": "boolean",
                                    "desc": "Is it using HA"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "User name"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User password"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Bridge"
                        },
                        {
                            "args": [
                                {
                                    "name": "bridgeConfiguration",
                                    "type": "java.lang.String",
                                    "desc": "the configuration of the bridge in JSON format"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a bridge"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the bridge"
                                },
                                {
                                    "name": "queueName",
                                    "type": "java.lang.String",
                                    "desc": "Name of the source queue"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Forwarding address"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the bridge"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the bridge transformer"
                                },
                                {
                                    "name": "transformerProperties",
                                    "type": "java.util.Map",
                                    "desc": "Configuration properties of the bridge transformer"
                                },
                                {
                                    "name": "retryInterval",
                                    "type": "long",
                                    "desc": "Connection retry interval"
                                },
                                {
                                    "name": "retryIntervalMultiplier",
                                    "type": "double",
                                    "desc": "Connection retry interval multiplier"
                                },
                                {
                                    "name": "initialConnectAttempts",
                                    "type": "int",
                                    "desc": "Number of initial connection attempts"
                                },
                                {
                                    "name": "reconnectAttempts",
                                    "type": "int",
                                    "desc": "Number of reconnection attempts"
                                },
                                {
                                    "name": "useDuplicateDetection",
                                    "type": "boolean",
                                    "desc": "Use duplicate detection"
                                },
                                {
                                    "name": "confirmationWindowSize",
                                    "type": "int",
                                    "desc": "Confirmation window size"
                                },
                                {
                                    "name": "producerWindowSize",
                                    "type": "int",
                                    "desc": "Producer window size"
                                },
                                {
                                    "name": "clientFailureCheckPeriod",
                                    "type": "long",
                                    "desc": "Period to check client failure"
                                },
                                {
                                    "name": "staticConnectorNames",
                                    "type": "java.lang.String",
                                    "desc": "comma separated list of connector names or name of discovery group if 'useDiscoveryGroup' is set to true"
                                },
                                {
                                    "name": "useDiscoveryGroup",
                                    "type": "boolean",
                                    "desc": "use discovery  group"
                                },
                                {
                                    "name": "ha",
                                    "type": "boolean",
                                    "desc": "Is it using HA"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "User name"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User password"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Bridge"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the bridge"
                                },
                                {
                                    "name": "queueName",
                                    "type": "java.lang.String",
                                    "desc": "Name of the source queue"
                                },
                                {
                                    "name": "forwardingAddress",
                                    "type": "java.lang.String",
                                    "desc": "Forwarding address"
                                },
                                {
                                    "name": "filterString",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the bridge"
                                },
                                {
                                    "name": "transformerClassName",
                                    "type": "java.lang.String",
                                    "desc": "Class name of the bridge transformer"
                                },
                                {
                                    "name": "transformerPropertiesAsJSON",
                                    "type": "java.lang.String",
                                    "desc": "Configuration properties of the bridge transformer in JSON form"
                                },
                                {
                                    "name": "retryInterval",
                                    "type": "long",
                                    "desc": "Connection retry interval"
                                },
                                {
                                    "name": "retryIntervalMultiplier",
                                    "type": "double",
                                    "desc": "Connection retry interval multiplier"
                                },
                                {
                                    "name": "initialConnectAttempts",
                                    "type": "int",
                                    "desc": "Number of initial connection attempts"
                                },
                                {
                                    "name": "reconnectAttempts",
                                    "type": "int",
                                    "desc": "Number of reconnection attempts"
                                },
                                {
                                    "name": "useDuplicateDetection",
                                    "type": "boolean",
                                    "desc": "Use duplicate detection"
                                },
                                {
                                    "name": "confirmationWindowSize",
                                    "type": "int",
                                    "desc": "Confirmation window size"
                                },
                                {
                                    "name": "producerWindowSize",
                                    "type": "int",
                                    "desc": "Producer window size"
                                },
                                {
                                    "name": "clientFailureCheckPeriod",
                                    "type": "long",
                                    "desc": "Period to check client failure"
                                },
                                {
                                    "name": "staticConnectorNames",
                                    "type": "java.lang.String",
                                    "desc": "comma separated list of connector names or name of discovery group if 'useDiscoveryGroup' is set to true"
                                },
                                {
                                    "name": "useDiscoveryGroup",
                                    "type": "boolean",
                                    "desc": "use discovery  group"
                                },
                                {
                                    "name": "ha",
                                    "type": "boolean",
                                    "desc": "Is it using HA"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "User name"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "User password"
                                }
                            ],
                            "ret": "void",
                            "desc": "Create a Bridge"
                        }
                    ],
                    "disableMessageCounters": {
                        "args": [],
                        "ret": "void",
                        "desc": "Disable message counters"
                    },
                    "listProducers": {
                        "args": [
                            {
                                "name": "options",
                                "type": "java.lang.String",
                                "desc": "Options"
                            },
                            {
                                "name": "pageNumber",
                                "type": "int",
                                "desc": "Page Number"
                            },
                            {
                                "name": "pageSize",
                                "type": "int",
                                "desc": "Page Size"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Search for Consumers"
                    },
                    "addAddressSettings": [
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "DLA",
                                    "type": "java.lang.String",
                                    "desc": "the dead letter address setting"
                                },
                                {
                                    "name": "expiryAddress",
                                    "type": "java.lang.String",
                                    "desc": "the expiry address setting"
                                },
                                {
                                    "name": "expiryDelay",
                                    "type": "long",
                                    "desc": "the expiry delay setting"
                                },
                                {
                                    "name": "lastValueQueue",
                                    "type": "boolean",
                                    "desc": "are any queues created for this address a last value queue"
                                },
                                {
                                    "name": "deliveryAttempts",
                                    "type": "int",
                                    "desc": "the delivery attempts"
                                },
                                {
                                    "name": "maxSizeBytes",
                                    "type": "long",
                                    "desc": "the max size in bytes"
                                },
                                {
                                    "name": "pageSizeBytes",
                                    "type": "int",
                                    "desc": "the page size in bytes"
                                },
                                {
                                    "name": "pageMaxCacheSize",
                                    "type": "int",
                                    "desc": "the max number of pages in the soft memory cache"
                                },
                                {
                                    "name": "redeliveryDelay",
                                    "type": "long",
                                    "desc": "the redelivery delay"
                                },
                                {
                                    "name": "redeliveryMultiplier",
                                    "type": "double",
                                    "desc": "the redelivery delay multiplier"
                                },
                                {
                                    "name": "maxRedeliveryDelay",
                                    "type": "long",
                                    "desc": "the maximum redelivery delay"
                                },
                                {
                                    "name": "redistributionDelay",
                                    "type": "long",
                                    "desc": "the redistribution delay"
                                },
                                {
                                    "name": "sendToDLAOnNoRoute",
                                    "type": "boolean",
                                    "desc": "do we send to the DLA when there is no where to route the message"
                                },
                                {
                                    "name": "addressFullMessagePolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when the address is full"
                                },
                                {
                                    "name": "slowConsumerThreshold",
                                    "type": "long",
                                    "desc": "when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"
                                },
                                {
                                    "name": "slowConsumerCheckPeriod",
                                    "type": "long",
                                    "desc": "how often (in seconds) to check for slow consumers"
                                },
                                {
                                    "name": "slowConsumerPolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when a slow consumer is detected"
                                },
                                {
                                    "name": "autoCreateJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow topics to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow auto-created topics to be deleted automatically"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add address settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "DLA",
                                    "type": "java.lang.String",
                                    "desc": "the dead letter address setting"
                                },
                                {
                                    "name": "expiryAddress",
                                    "type": "java.lang.String",
                                    "desc": "the expiry address setting"
                                },
                                {
                                    "name": "expiryDelay",
                                    "type": "long",
                                    "desc": "the expiry delay setting"
                                },
                                {
                                    "name": "lastValueQueue",
                                    "type": "boolean",
                                    "desc": "are any queues created for this address a last value queue"
                                },
                                {
                                    "name": "deliveryAttempts",
                                    "type": "int",
                                    "desc": "the delivery attempts"
                                },
                                {
                                    "name": "maxSizeBytes",
                                    "type": "long",
                                    "desc": "the max size in bytes"
                                },
                                {
                                    "name": "pageSizeBytes",
                                    "type": "int",
                                    "desc": "the page size in bytes"
                                },
                                {
                                    "name": "pageMaxCacheSize",
                                    "type": "int",
                                    "desc": "the max number of pages in the soft memory cache"
                                },
                                {
                                    "name": "redeliveryDelay",
                                    "type": "long",
                                    "desc": "the redelivery delay"
                                },
                                {
                                    "name": "redeliveryMultiplier",
                                    "type": "double",
                                    "desc": "the redelivery delay multiplier"
                                },
                                {
                                    "name": "maxRedeliveryDelay",
                                    "type": "long",
                                    "desc": "the maximum redelivery delay"
                                },
                                {
                                    "name": "redistributionDelay",
                                    "type": "long",
                                    "desc": "the redistribution delay"
                                },
                                {
                                    "name": "sendToDLAOnNoRoute",
                                    "type": "boolean",
                                    "desc": "do we send to the DLA when there is no where to route the message"
                                },
                                {
                                    "name": "addressFullMessagePolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when the address is full"
                                },
                                {
                                    "name": "slowConsumerThreshold",
                                    "type": "long",
                                    "desc": "when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"
                                },
                                {
                                    "name": "slowConsumerCheckPeriod",
                                    "type": "long",
                                    "desc": "how often (in seconds) to check for slow consumers"
                                },
                                {
                                    "name": "slowConsumerPolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when a slow consumer is detected"
                                },
                                {
                                    "name": "autoCreateJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow jms queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow jms topics to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms topics to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateQueues",
                                    "type": "boolean",
                                    "desc": "allow queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateAddresses",
                                    "type": "boolean",
                                    "desc": "allow addresses to be created automatically"
                                },
                                {
                                    "name": "autoDeleteAddresses",
                                    "type": "boolean",
                                    "desc": "allow auto-created addresses to be deleted automatically"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add address settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "DLA",
                                    "type": "java.lang.String",
                                    "desc": "the dead letter address setting"
                                },
                                {
                                    "name": "expiryAddress",
                                    "type": "java.lang.String",
                                    "desc": "the expiry address setting"
                                },
                                {
                                    "name": "expiryDelay",
                                    "type": "long",
                                    "desc": "the expiry delay setting"
                                },
                                {
                                    "name": "lastValueQueue",
                                    "type": "boolean",
                                    "desc": "are any queues created for this address a last value queue"
                                },
                                {
                                    "name": "deliveryAttempts",
                                    "type": "int",
                                    "desc": "the delivery attempts"
                                },
                                {
                                    "name": "maxSizeBytes",
                                    "type": "long",
                                    "desc": "the max size in bytes"
                                },
                                {
                                    "name": "pageSizeBytes",
                                    "type": "int",
                                    "desc": "the page size in bytes"
                                },
                                {
                                    "name": "pageMaxCacheSize",
                                    "type": "int",
                                    "desc": "the max number of pages in the soft memory cache"
                                },
                                {
                                    "name": "redeliveryDelay",
                                    "type": "long",
                                    "desc": "the redelivery delay"
                                },
                                {
                                    "name": "redeliveryMultiplier",
                                    "type": "double",
                                    "desc": "the redelivery delay multiplier"
                                },
                                {
                                    "name": "maxRedeliveryDelay",
                                    "type": "long",
                                    "desc": "the maximum redelivery delay"
                                },
                                {
                                    "name": "redistributionDelay",
                                    "type": "long",
                                    "desc": "the redistribution delay"
                                },
                                {
                                    "name": "sendToDLAOnNoRoute",
                                    "type": "boolean",
                                    "desc": "do we send to the DLA when there is no where to route the message"
                                },
                                {
                                    "name": "addressFullMessagePolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when the address is full"
                                },
                                {
                                    "name": "slowConsumerThreshold",
                                    "type": "long",
                                    "desc": "when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"
                                },
                                {
                                    "name": "slowConsumerCheckPeriod",
                                    "type": "long",
                                    "desc": "how often (in seconds) to check for slow consumers"
                                },
                                {
                                    "name": "slowConsumerPolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when a slow consumer is detected"
                                },
                                {
                                    "name": "autoCreateJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow jms queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow jms topics to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms topics to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateQueues",
                                    "type": "boolean",
                                    "desc": "allow queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateAddresses",
                                    "type": "boolean",
                                    "desc": "allow addresses to be created automatically"
                                },
                                {
                                    "name": "autoDeleteAddresses",
                                    "type": "boolean",
                                    "desc": "allow auto-created addresses to be deleted automatically"
                                },
                                {
                                    "name": "configDeleteQueues",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with queues deleted from XML at runtime"
                                },
                                {
                                    "name": "configDeleteAddresses",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with addresses deleted from XML at runtime"
                                },
                                {
                                    "name": "maxSizeBytesRejectThreshold",
                                    "type": "long",
                                    "desc": "used with `BLOCK`, the max size an address can reach before messages are rejected; works in combination with `max-size-bytes` for AMQP clients only"
                                },
                                {
                                    "name": "defaultLastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "last-value-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultNonDestructive",
                                    "type": "boolean",
                                    "desc": "non-destructive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultExclusiveQueue",
                                    "type": "boolean",
                                    "desc": "exclusive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupRebalance",
                                    "type": "boolean",
                                    "desc": "group-rebalance value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupBuckets",
                                    "type": "int",
                                    "desc": "group-buckets value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "group-first-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultMaxConsumers",
                                    "type": "int",
                                    "desc": "max-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultPurgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "purge-on-no-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultConsumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "consumers-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultDelayBeforeDispatch",
                                    "type": "long",
                                    "desc": "delay-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultQueueRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the queue"
                                },
                                {
                                    "name": "defaultAddressRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the address"
                                },
                                {
                                    "name": "defaultConsumerWindowSize",
                                    "type": "int",
                                    "desc": "consumer-window-size value if none is set on the queue"
                                },
                                {
                                    "name": "defaultRingSize",
                                    "type": "long",
                                    "desc": "ring-size value if none is set on the queue"
                                },
                                {
                                    "name": "autoDeleteCreatedQueues",
                                    "type": "boolean",
                                    "desc": "allow created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoDeleteQueuesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created queues"
                                },
                                {
                                    "name": "autoDeleteQueuesMessageCount",
                                    "type": "long",
                                    "desc": "the message count the queue must be at or below before it can be auto deleted"
                                },
                                {
                                    "name": "autoDeleteAddressesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created addresses"
                                },
                                {
                                    "name": "redeliveryCollisionAvoidanceFactor",
                                    "type": "double",
                                    "desc": "factor by which to modify the redelivery delay slightly to avoid collisions"
                                },
                                {
                                    "name": "retroactiveMessageCount",
                                    "type": "long",
                                    "desc": "the number of messages to preserve for future queues created on the matching address"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add address settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "DLA",
                                    "type": "java.lang.String",
                                    "desc": "the dead letter address setting"
                                },
                                {
                                    "name": "expiryAddress",
                                    "type": "java.lang.String",
                                    "desc": "the expiry address setting"
                                },
                                {
                                    "name": "expiryDelay",
                                    "type": "long",
                                    "desc": "the expiry delay setting"
                                },
                                {
                                    "name": "lastValueQueue",
                                    "type": "boolean",
                                    "desc": "are any queues created for this address a last value queue"
                                },
                                {
                                    "name": "deliveryAttempts",
                                    "type": "int",
                                    "desc": "the delivery attempts"
                                },
                                {
                                    "name": "maxSizeBytes",
                                    "type": "long",
                                    "desc": "the max size in bytes"
                                },
                                {
                                    "name": "pageSizeBytes",
                                    "type": "int",
                                    "desc": "the page size in bytes"
                                },
                                {
                                    "name": "pageMaxCacheSize",
                                    "type": "int",
                                    "desc": "the max number of pages in the soft memory cache"
                                },
                                {
                                    "name": "redeliveryDelay",
                                    "type": "long",
                                    "desc": "the redelivery delay"
                                },
                                {
                                    "name": "redeliveryMultiplier",
                                    "type": "double",
                                    "desc": "the redelivery delay multiplier"
                                },
                                {
                                    "name": "maxRedeliveryDelay",
                                    "type": "long",
                                    "desc": "the maximum redelivery delay"
                                },
                                {
                                    "name": "redistributionDelay",
                                    "type": "long",
                                    "desc": "the redistribution delay"
                                },
                                {
                                    "name": "sendToDLAOnNoRoute",
                                    "type": "boolean",
                                    "desc": "do we send to the DLA when there is no where to route the message"
                                },
                                {
                                    "name": "addressFullMessagePolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when the address is full"
                                },
                                {
                                    "name": "slowConsumerThreshold",
                                    "type": "long",
                                    "desc": "when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"
                                },
                                {
                                    "name": "slowConsumerCheckPeriod",
                                    "type": "long",
                                    "desc": "how often (in seconds) to check for slow consumers"
                                },
                                {
                                    "name": "slowConsumerPolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when a slow consumer is detected"
                                },
                                {
                                    "name": "autoCreateJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow jms queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow jms topics to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms topics to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateQueues",
                                    "type": "boolean",
                                    "desc": "allow queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateAddresses",
                                    "type": "boolean",
                                    "desc": "allow addresses to be created automatically"
                                },
                                {
                                    "name": "autoDeleteAddresses",
                                    "type": "boolean",
                                    "desc": "allow auto-created addresses to be deleted automatically"
                                },
                                {
                                    "name": "configDeleteQueues",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with queues deleted from XML at runtime"
                                },
                                {
                                    "name": "configDeleteAddresses",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with addresses deleted from XML at runtime"
                                },
                                {
                                    "name": "maxSizeBytesRejectThreshold",
                                    "type": "long",
                                    "desc": "used with `BLOCK`, the max size an address can reach before messages are rejected; works in combination with `max-size-bytes` for AMQP clients only"
                                },
                                {
                                    "name": "defaultLastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "last-value-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultNonDestructive",
                                    "type": "boolean",
                                    "desc": "non-destructive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultExclusiveQueue",
                                    "type": "boolean",
                                    "desc": "exclusive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupRebalance",
                                    "type": "boolean",
                                    "desc": "group-rebalance value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupBuckets",
                                    "type": "int",
                                    "desc": "group-buckets value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "group-first-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultMaxConsumers",
                                    "type": "int",
                                    "desc": "max-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultPurgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "purge-on-no-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultConsumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "consumers-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultDelayBeforeDispatch",
                                    "type": "long",
                                    "desc": "delay-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultQueueRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the queue"
                                },
                                {
                                    "name": "defaultAddressRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the address"
                                },
                                {
                                    "name": "defaultConsumerWindowSize",
                                    "type": "int",
                                    "desc": "consumer-window-size value if none is set on the queue"
                                },
                                {
                                    "name": "defaultRingSize",
                                    "type": "long",
                                    "desc": "ring-size value if none is set on the queue"
                                },
                                {
                                    "name": "autoDeleteCreatedQueues",
                                    "type": "boolean",
                                    "desc": "allow created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoDeleteQueuesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created queues"
                                },
                                {
                                    "name": "autoDeleteQueuesMessageCount",
                                    "type": "long",
                                    "desc": "the message count the queue must be at or below before it can be auto deleted"
                                },
                                {
                                    "name": "autoDeleteAddressesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created addresses"
                                },
                                {
                                    "name": "redeliveryCollisionAvoidanceFactor",
                                    "type": "double",
                                    "desc": "factor by which to modify the redelivery delay slightly to avoid collisions"
                                },
                                {
                                    "name": "retroactiveMessageCount",
                                    "type": "long",
                                    "desc": "the number of messages to preserve for future queues created on the matching address"
                                },
                                {
                                    "name": "autoCreateDeadLetterResources",
                                    "type": "boolean",
                                    "desc": "allow dead-letter address & queue to be created automatically"
                                },
                                {
                                    "name": "deadLetterQueuePrefix",
                                    "type": "java.lang.String",
                                    "desc": "prefix to use on auto-create dead-letter queue"
                                },
                                {
                                    "name": "deadLetterQueueSuffix",
                                    "type": "java.lang.String",
                                    "desc": "suffix to use on auto-create dead-letter queue"
                                },
                                {
                                    "name": "autoCreateExpiryResources",
                                    "type": "boolean",
                                    "desc": "allow expiry address & queue to be created automatically"
                                },
                                {
                                    "name": "expiryQueuePrefix",
                                    "type": "java.lang.String",
                                    "desc": "prefix to use on auto-create expiry queue"
                                },
                                {
                                    "name": "expiryQueueSuffix",
                                    "type": "java.lang.String",
                                    "desc": "suffix to use on auto-create expiry queue"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add address settings for addresses matching the addressMatch"
                        },
                        {
                            "args": [
                                {
                                    "name": "addressMatch",
                                    "type": "java.lang.String",
                                    "desc": "an address match"
                                },
                                {
                                    "name": "DLA",
                                    "type": "java.lang.String",
                                    "desc": "the dead letter address setting"
                                },
                                {
                                    "name": "expiryAddress",
                                    "type": "java.lang.String",
                                    "desc": "the expiry address setting"
                                },
                                {
                                    "name": "expiryDelay",
                                    "type": "long",
                                    "desc": "the expiry delay setting"
                                },
                                {
                                    "name": "lastValueQueue",
                                    "type": "boolean",
                                    "desc": "are any queues created for this address a last value queue"
                                },
                                {
                                    "name": "maxDeliveryAttempts",
                                    "type": "int",
                                    "desc": "the delivery attempts"
                                },
                                {
                                    "name": "maxSizeBytes",
                                    "type": "long",
                                    "desc": "the max size in bytes"
                                },
                                {
                                    "name": "pageSizeBytes",
                                    "type": "int",
                                    "desc": "the page size in bytes"
                                },
                                {
                                    "name": "pageCacheMaxSize",
                                    "type": "int",
                                    "desc": "the max number of pages in the soft memory cache"
                                },
                                {
                                    "name": "redeliveryDelay",
                                    "type": "long",
                                    "desc": "the redelivery delay"
                                },
                                {
                                    "name": "redeliveryMultiplier",
                                    "type": "double",
                                    "desc": "the redelivery delay multiplier"
                                },
                                {
                                    "name": "maxRedeliveryDelay",
                                    "type": "long",
                                    "desc": "the maximum redelivery delay"
                                },
                                {
                                    "name": "redistributionDelay",
                                    "type": "long",
                                    "desc": "the redistribution delay"
                                },
                                {
                                    "name": "sendToDLAOnNoRoute",
                                    "type": "boolean",
                                    "desc": "do we send to the DLA when there is no where to route the message"
                                },
                                {
                                    "name": "addressFullMessagePolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when the address is full"
                                },
                                {
                                    "name": "slowConsumerThreshold",
                                    "type": "long",
                                    "desc": "when a consumer falls below this threshold in terms of messages consumed per second it will be considered 'slow'"
                                },
                                {
                                    "name": "slowConsumerCheckPeriod",
                                    "type": "long",
                                    "desc": "how often (in seconds) to check for slow consumers"
                                },
                                {
                                    "name": "slowConsumerPolicy",
                                    "type": "java.lang.String",
                                    "desc": "the policy to use when a slow consumer is detected"
                                },
                                {
                                    "name": "autoCreateJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow jms queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow jms topics to be created automatically"
                                },
                                {
                                    "name": "autoDeleteJmsTopics",
                                    "type": "boolean",
                                    "desc": "allow auto-created jms topics to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateQueues",
                                    "type": "boolean",
                                    "desc": "allow queues to be created automatically"
                                },
                                {
                                    "name": "autoDeleteQueues",
                                    "type": "boolean",
                                    "desc": "allow auto-created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoCreateAddresses",
                                    "type": "boolean",
                                    "desc": "allow addresses to be created automatically"
                                },
                                {
                                    "name": "autoDeleteAddresses",
                                    "type": "boolean",
                                    "desc": "allow auto-created addresses to be deleted automatically"
                                },
                                {
                                    "name": "configDeleteQueues",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with queues deleted from XML at runtime"
                                },
                                {
                                    "name": "configDeleteAddresses",
                                    "type": "java.lang.String",
                                    "desc": "how to deal with addresses deleted from XML at runtime"
                                },
                                {
                                    "name": "maxSizeBytesRejectThreshold",
                                    "type": "long",
                                    "desc": "used with `BLOCK`, the max size an address can reach before messages are rejected; works in combination with `max-size-bytes` for AMQP clients only"
                                },
                                {
                                    "name": "defaultLastValueKey",
                                    "type": "java.lang.String",
                                    "desc": "last-value-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultNonDestructive",
                                    "type": "boolean",
                                    "desc": "non-destructive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultExclusiveQueue",
                                    "type": "boolean",
                                    "desc": "exclusive value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupRebalance",
                                    "type": "boolean",
                                    "desc": "group-rebalance value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupBuckets",
                                    "type": "int",
                                    "desc": "group-buckets value if none is set on the queue"
                                },
                                {
                                    "name": "defaultGroupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "group-first-key value if none is set on the queue"
                                },
                                {
                                    "name": "defaultMaxConsumers",
                                    "type": "int",
                                    "desc": "max-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultPurgeOnNoConsumers",
                                    "type": "boolean",
                                    "desc": "purge-on-no-consumers value if none is set on the queue"
                                },
                                {
                                    "name": "defaultConsumersBeforeDispatch",
                                    "type": "int",
                                    "desc": "consumers-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultDelayBeforeDispatch",
                                    "type": "long",
                                    "desc": "delay-before-dispatch value if none is set on the queue"
                                },
                                {
                                    "name": "defaultQueueRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the queue"
                                },
                                {
                                    "name": "defaultAddressRoutingType",
                                    "type": "java.lang.String",
                                    "desc": "routing-type value if none is set on the address"
                                },
                                {
                                    "name": "defaultConsumerWindowSize",
                                    "type": "int",
                                    "desc": "consumer-window-size value if none is set on the queue"
                                },
                                {
                                    "name": "defaultRingSize",
                                    "type": "long",
                                    "desc": "ring-size value if none is set on the queue"
                                },
                                {
                                    "name": "autoDeleteCreatedQueues",
                                    "type": "boolean",
                                    "desc": "allow created queues to be deleted automatically"
                                },
                                {
                                    "name": "autoDeleteQueuesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created queues"
                                },
                                {
                                    "name": "autoDeleteQueuesMessageCount",
                                    "type": "long",
                                    "desc": "the message count the queue must be at or below before it can be auto deleted"
                                },
                                {
                                    "name": "autoDeleteAddressesDelay",
                                    "type": "long",
                                    "desc": "delay for deleting auto-created addresses"
                                },
                                {
                                    "name": "redeliveryCollisionAvoidanceFactor",
                                    "type": "double",
                                    "desc": "factor by which to modify the redelivery delay slightly to avoid collisions"
                                },
                                {
                                    "name": "retroactiveMessageCount",
                                    "type": "long",
                                    "desc": "the number of messages to preserve for future queues created on the matching address"
                                },
                                {
                                    "name": "autoCreateDeadLetterResources",
                                    "type": "boolean",
                                    "desc": "allow dead-letter address & queue to be created automatically"
                                },
                                {
                                    "name": "deadLetterQueuePrefix",
                                    "type": "java.lang.String",
                                    "desc": "prefix to use on auto-create dead-letter queue"
                                },
                                {
                                    "name": "deadLetterQueueSuffix",
                                    "type": "java.lang.String",
                                    "desc": "suffix to use on auto-create dead-letter queue"
                                },
                                {
                                    "name": "autoCreateExpiryResources",
                                    "type": "boolean",
                                    "desc": "allow expiry address & queue to be created automatically"
                                },
                                {
                                    "name": "expiryQueuePrefix",
                                    "type": "java.lang.String",
                                    "desc": "prefix to use on auto-create expiry queue"
                                },
                                {
                                    "name": "expiryQueueSuffix",
                                    "type": "java.lang.String",
                                    "desc": "suffix to use on auto-create expiry queue"
                                },
                                {
                                    "name": "minExpiryDelay",
                                    "type": "long",
                                    "desc": "the minimum expiry delay setting"
                                },
                                {
                                    "name": "maxExpiryDelay",
                                    "type": "long",
                                    "desc": "the maximum expiry delay setting"
                                },
                                {
                                    "name": "enableMetrics",
                                    "type": "boolean",
                                    "desc": "whether or not to enable metrics"
                                }
                            ],
                            "ret": "void",
                            "desc": "Add address settings for addresses matching the addressMatch"
                        }
                    ],
                    "updateQueue": [
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "queueConfiguration",
                                    "type": "java.lang.String",
                                    "desc": "the configuration of the queue in JSON format"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user associated with this queue"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "The filter to use on the queue"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "groupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "Key used to mark a message is first in a group for a consumer"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "java.lang.Long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user associated with this queue"
                                },
                                {
                                    "name": "ringSize",
                                    "type": "java.lang.Long",
                                    "desc": "the size this queue should maintain according to ring semantics"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "The filter to use on the queue"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "groupFirstKey",
                                    "type": "java.lang.String",
                                    "desc": "Key used to mark a message is first in a group for a consumer"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "java.lang.Long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user associated with this queue"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "routingType",
                                    "type": "java.lang.String",
                                    "desc": "The routing type used for this address, MULTICAST or ANYCAST"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "The filter to use on the queue"
                                },
                                {
                                    "name": "maxConsumers",
                                    "type": "java.lang.Integer",
                                    "desc": "The maximum number of consumers allowed on this queue at any one time"
                                },
                                {
                                    "name": "purgeOnNoConsumers",
                                    "type": "java.lang.Boolean",
                                    "desc": "Delete this queue when the last consumer disconnects"
                                },
                                {
                                    "name": "exclusive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should route exclusively to one consumer"
                                },
                                {
                                    "name": "groupRebalance",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue should rebalance groups when a consumer is added"
                                },
                                {
                                    "name": "groupBuckets",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of buckets that should be used for message groups, -1 (default) is unlimited, and groups by raw key instead"
                                },
                                {
                                    "name": "nonDestructive",
                                    "type": "java.lang.Boolean",
                                    "desc": "If the queue is non-destructive"
                                },
                                {
                                    "name": "consumersBeforeDispatch",
                                    "type": "java.lang.Integer",
                                    "desc": "Number of consumers needed before dispatch can start"
                                },
                                {
                                    "name": "delayBeforeDispatch",
                                    "type": "java.lang.Long",
                                    "desc": "Delay to wait before dispatching if number of consumers before dispatch is not met"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user associated with this queue"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Update a queue"
                        }
                    ],
                    "createConnectorService": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the connector service"
                            },
                            {
                                "name": "factoryClass",
                                "type": "java.lang.String",
                                "desc": "Class name of the connector service factory"
                            },
                            {
                                "name": "parameters",
                                "type": "java.util.Map",
                                "desc": "Parameter specific to the connector service"
                            }
                        ],
                        "ret": "void",
                        "desc": "Create a connector service"
                    },
                    "listAllConsumersAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all consumers as a JSON string"
                    },
                    "listHeuristicRolledBackTransactions": {
                        "args": [],
                        "ret": "[Ljava.lang.String;",
                        "desc": "List transactions which have been heuristically rolled back"
                    },
                    "closeConnectionsForAddress": {
                        "args": [
                            {
                                "name": "ipAddress",
                                "type": "java.lang.String",
                                "desc": "an IP address"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes all the connections for the given IP Address"
                    },
                    "listConnections": {
                        "args": [
                            {
                                "name": "options",
                                "type": "java.lang.String",
                                "desc": "Options"
                            },
                            {
                                "name": "pageNumber",
                                "type": "int",
                                "desc": "Page Number"
                            },
                            {
                                "name": "pageSize",
                                "type": "int",
                                "desc": "Page Size"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Search for Connections"
                    },
                    "listPreparedTransactions": {
                        "args": [],
                        "ret": "[Ljava.lang.String;",
                        "desc": "List all the prepared transaction, sorted by date, oldest first"
                    },
                    "listAllSessionsAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all sessions as a JSON string"
                    },
                    "deployQueue": [
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Is the queue durable?"
                                }
                            ],
                            "ret": "void",
                            "desc": "Deploy a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "address",
                                    "type": "java.lang.String",
                                    "desc": "Address of the queue"
                                },
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "Filter of the queue"
                                }
                            ],
                            "ret": "void",
                            "desc": "Deploy a queue"
                        }
                    ],
                    "startBrokerConnection": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the broker connection to be started"
                            }
                        ],
                        "ret": "void",
                        "desc": "Activate a broker connection that is pre configured"
                    },
                    "getAddressSettingsAsJSON": {
                        "args": [
                            {
                                "name": "addressMatch",
                                "type": "java.lang.String",
                                "desc": "an address match"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Returns the address settings as a JSON string for an address match"
                    },
                    "closeConsumerConnectionsForAddress": {
                        "args": [
                            {
                                "name": "address",
                                "type": "java.lang.String",
                                "desc": "a messaging address"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes all the consumer connections for the given messaging address"
                    },
                    "listBindingsForAddress": {
                        "args": [
                            {
                                "name": "address",
                                "type": "java.lang.String",
                                "desc": "The address"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Get a list of bindings associated with an address"
                    },
                    "closeConnectionWithID": {
                        "args": [
                            {
                                "name": "ID",
                                "type": "java.lang.String",
                                "desc": "The connection ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes all the connection with the id"
                    },
                    "freezeReplication": {
                        "args": [],
                        "ret": "boolean",
                        "desc": "Isolate the broker"
                    },
                    "forceFailover": {
                        "args": [],
                        "ret": "void",
                        "desc": "Force the server to stop and notify clients to failover"
                    },
                    "listConnectionsAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all connections as a JSON string"
                    },
                    "destroyQueue": [
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue to destroy"
                                },
                                {
                                    "name": "removeConsumers",
                                    "type": "boolean",
                                    "desc": "Remove consumers of this queue"
                                },
                                {
                                    "name": "autoDeleteAddress",
                                    "type": "boolean",
                                    "desc": "Automatically delete the address if this was the last queue"
                                }
                            ],
                            "ret": "void",
                            "desc": "Destroy a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue to destroy"
                                }
                            ],
                            "ret": "void",
                            "desc": "Destroy a queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "name",
                                    "type": "java.lang.String",
                                    "desc": "Name of the queue to destroy"
                                },
                                {
                                    "name": "removeConsumers",
                                    "type": "boolean",
                                    "desc": "Remove consumers of this queue"
                                }
                            ],
                            "ret": "void",
                            "desc": "Destroy a queue"
                        }
                    ],
                    "listPreparedTransactionDetailsAsHTML": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the prepared transaction, sorted by date, oldest first, with details, in HTML format"
                    },
                    "listProducersInfoAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all producers"
                    },
                    "destroyDivert": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the divert"
                            }
                        ],
                        "ret": "void",
                        "desc": "Destroy a Divert"
                    },
                    "destroyBridge": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the bridge"
                            }
                        ],
                        "ret": "void",
                        "desc": "Destroy a bridge"
                    },
                    "getQueueNames": {
                        "args": [
                            {
                                "name": "routingType",
                                "type": "java.lang.String",
                                "desc": "The routing type, MULTICAST or ANYCAST"
                            }
                        ],
                        "ret": "[Ljava.lang.String;",
                        "desc": "Names of the queues created on this server with the given routing-type (i.e. ANYCAST or MULTICAST)"
                    },
                    "closeConnectionsForUser": {
                        "args": [
                            {
                                "name": "userName",
                                "type": "java.lang.String",
                                "desc": "a user name"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Closes all the connections for sessions with the given user name"
                    },
                    "listSessionsAsJSON": {
                        "args": [
                            {
                                "name": "connectionID",
                                "type": "java.lang.String",
                                "desc": "a connection ID"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "List the sessions for the given connectionID as a JSON string"
                    },
                    "removeSecuritySettings": {
                        "args": [
                            {
                                "name": "addressMatch",
                                "type": "java.lang.String",
                                "desc": "an address match"
                            }
                        ],
                        "ret": "void",
                        "desc": "Remove security settings for an address"
                    },
                    "destroyConnectorService": {
                        "args": [
                            {
                                "name": "name",
                                "type": "java.lang.String",
                                "desc": "Name of the connector service"
                            }
                        ],
                        "ret": "void",
                        "desc": "Destroy a connector service"
                    }
                },
                "attr": {
                    "AddressMemoryUsage": {
                        "rw": false,
                        "type": "long",
                        "desc": "Memory used by all the addresses on broker for in-memory messages"
                    },
                    "ConnectorServices": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Names of the connector services on this server"
                    },
                    "ManagementAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Management address of this server"
                    },
                    "ClusterConnectionNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "N\/A"
                    },
                    "Clustered": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether this server is clustered"
                    },
                    "JournalMinFiles": {
                        "rw": false,
                        "type": "int",
                        "desc": "Number of journal files to pre-create"
                    },
                    "FailoverOnServerShutdown": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "If clients failover on a server shutdown"
                    },
                    "JournalCompactMinFiles": {
                        "rw": false,
                        "type": "int",
                        "desc": "Minimal number of journal files before compacting"
                    },
                    "MessageExpiryThreadPriority": {
                        "rw": false,
                        "type": "long",
                        "desc": "Priority of the thread used to scan message expiration"
                    },
                    "PersistDeliveryCountBeforeDelivery": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether delivery count is persisted before messages are delivered to the consumers"
                    },
                    "ConnectionTTLOverride": {
                        "rw": false,
                        "type": "long",
                        "desc": "Connection time to live"
                    },
                    "PersistenceEnabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether this server is using persistence and store data"
                    },
                    "JournalCompactPercentage": {
                        "rw": false,
                        "type": "int",
                        "desc": "Percentage of live data before compacting the journal"
                    },
                    "CreateBindingsDir": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether the bindings directory is created on this server startup"
                    },
                    "ConnectionCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "Number of clients connected to this server"
                    },
                    "Version": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Server's version"
                    },
                    "HAPolicy": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Returns the HA Policy of this broker as a String"
                    },
                    "JournalDirectory": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "File system directory used to store journal log"
                    },
                    "UptimeMillis": {
                        "rw": false,
                        "type": "long",
                        "desc": "Uptime of this server in milliseconds"
                    },
                    "DiskStoreUsage": {
                        "rw": false,
                        "type": "double",
                        "desc": "Fraction of total disk store used"
                    },
                    "ActivationSequence": {
                        "rw": false,
                        "type": "long",
                        "desc": "Activation sequence of this server instance"
                    },
                    "ManagementNotificationAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Management notification address of this server"
                    },
                    "DivertNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Names of the diverts deployed on this server"
                    },
                    "JournalSyncNonTransactional": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether the journal is synchronized when receiving non-transactional datar"
                    },
                    "AuthenticationCacheSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "The runtime size of the authentication cache"
                    },
                    "TotalConnectionCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "Number of clients which have connected to this server since it was started"
                    },
                    "SharedStore": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether this server shares its data store with a corresponding live or backup serve"
                    },
                    "Active": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Server is active"
                    },
                    "QueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Names of the queues created on this server"
                    },
                    "PagingDirectory": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "File system directory used to store paging files"
                    },
                    "LargeMessagesDirectory": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "File system directory used to store large messages"
                    },
                    "JournalBufferSize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Size of the internal buffer on the journal"
                    },
                    "TotalMessagesAdded": {
                        "rw": false,
                        "type": "long",
                        "desc": "Number of messages sent to this server since it was started"
                    },
                    "MessageCounterSamplePeriod": {
                        "rw": true,
                        "type": "long",
                        "desc": "Sample period (in milliseconds) to take message counter snapshot"
                    },
                    "SecurityInvalidationInterval": {
                        "rw": false,
                        "type": "long",
                        "desc": "Interval time (in milliseconds) to invalidate security credentials"
                    },
                    "TotalConsumerCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "Number of consumers consuming messages from all the queues on this server"
                    },
                    "BridgeNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Names of the bridges deployed on this server"
                    },
                    "WildcardRoutingEnabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether wildcard routing is supported by this server"
                    },
                    "PersistIDCache": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether message ID cache is persisted"
                    },
                    "AsyncConnectionExecutionEnabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether code coming from connection is executed asynchronously or not"
                    },
                    "TotalMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "Number of messages in all queues on the server"
                    },
                    "Started": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether this server is started"
                    },
                    "CreateJournalDir": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether the journal directory is created on this server startup"
                    },
                    "GlobalMaxSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "Global maximum limit for in-memory messages, in bytes"
                    },
                    "AddressNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Names of the addresses created on this server"
                    },
                    "Backup": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether this server is a backup"
                    },
                    "JournalBufferTimeout": {
                        "rw": false,
                        "type": "int",
                        "desc": "Timeout (in nanoseconds) used to flush internal buffers on the journal"
                    },
                    "TotalMessagesAcknowledged": {
                        "rw": false,
                        "type": "long",
                        "desc": "Number of messages acknowledged from all the queues on this server since it was started"
                    },
                    "QueueCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "Number of queues created on this server"
                    },
                    "JournalPoolFiles": {
                        "rw": false,
                        "type": "int",
                        "desc": "Number of files that would be acceptable to keep on a pool"
                    },
                    "MaxDiskUsage": {
                        "rw": false,
                        "type": "int",
                        "desc": "Maximum limit for disk use, in percentage"
                    },
                    "IncomingInterceptorClassNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "List of interceptors used by this server for incoming messages"
                    },
                    "ReplicaSync": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether the initial replication synchronization process with the backup server is complete"
                    },
                    "NodeID": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Node ID of this server"
                    },
                    "ConnectorsAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Connectors configured for this server using JSON serialization"
                    },
                    "JournalFileSize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Size (in bytes) of each journal files"
                    },
                    "TransactionTimeout": {
                        "rw": false,
                        "type": "long",
                        "desc": "Timeout (in milliseconds) after which transactions is removed from the resource manager after it was created"
                    },
                    "MessageCounterEnabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether message counter is enabled for this server"
                    },
                    "OutgoingInterceptorClassNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "List of interceptors used by this server for outgoing messages"
                    },
                    "DiskScanPeriod": {
                        "rw": false,
                        "type": "int",
                        "desc": "How often to check for disk space usage, in milliseconds"
                    },
                    "IDCacheSize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Size of the cache for pre-creating message IDs"
                    },
                    "AddressCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "Number of addresses created on this server"
                    },
                    "Uptime": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Uptime of this server"
                    },
                    "AuthorizationCacheSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "The runtime size of the authorization cache"
                    },
                    "JournalSyncTransactional": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether the journal is synchronized when receiving transactional data"
                    },
                    "ScheduledThreadPoolMaxSize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Maximum number of threads in the scheduled thread pool"
                    },
                    "TransactionTimeoutScanPeriod": {
                        "rw": false,
                        "type": "long",
                        "desc": "Frequency (in milliseconds)  to scan transactions to detect which transactions have timed out"
                    },
                    "SecurityEnabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Whether security is enabled for this server"
                    },
                    "BindingsDirectory": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "File system directory used to store bindings"
                    },
                    "Connectors": {
                        "rw": false,
                        "type": "[Ljava.lang.Object;",
                        "desc": "Connectors configured for this server"
                    },
                    "JournalMaxIO": {
                        "rw": false,
                        "type": "int",
                        "desc": "Maximum number of write requests that can be in the AIO queue at any given time"
                    },
                    "AddressMemoryUsagePercentage": {
                        "rw": false,
                        "type": "int",
                        "desc": "Memory used by all the addresses on broker as a percentage of the global-max-size"
                    },
                    "MessageExpiryScanPeriod": {
                        "rw": false,
                        "type": "long",
                        "desc": "Frequency (in milliseconds)  to scan messages to detect which messages have expired"
                    },
                    "MessageCounterMaxDayCount": {
                        "rw": true,
                        "type": "int",
                        "desc": "Maximum number of days kept in memory for message counter"
                    },
                    "JournalType": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type of journal used by this server"
                    },
                    "ThreadPoolMaxSize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Maximum number of threads in the thread pool"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.ActiveMQServerControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "broker=\"0.0.0.0\",component=acceptors,name=\"administration\"": {
                "op": {
                    "reload": {
                        "args": [],
                        "ret": "void",
                        "desc": "Re-create the acceptor with the existing configuration values. Useful, for example, for reloading key\/trust stores on acceptors which support SSL."
                    },
                    "stop": {
                        "args": [],
                        "ret": "void",
                        "desc": "stops this component"
                    },
                    "start": {
                        "args": [],
                        "ret": "void",
                        "desc": "starts this component"
                    }
                },
                "attr": {
                    "FactoryClassName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "class name of the AcceptorFactory implementation used by this acceptor"
                    },
                    "Started": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this component is started"
                    },
                    "Parameters": {
                        "rw": false,
                        "type": "java.util.Map",
                        "desc": "parameters used to configure this acceptor"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "name of the acceptor"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.AcceptorControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "address=\"DLQ\",broker=\"0.0.0.0\",component=addresses,queue=\"DLQ\",routing-type=\"anycast\",subcomponent=queues": {
                "op": {
                    "listMessages": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "[Ljava.util.Map;",
                        "desc": "List all the messages in the queue matching the given filter"
                    },
                    "resetMessagesExpired": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesExpired property"
                    },
                    "listScheduledMessagesAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the messages scheduled for delivery and returns them using JSON"
                    },
                    "moveMessage": [
                        {
                            "args": [
                                {
                                    "name": "messageID",
                                    "type": "long",
                                    "desc": "A message ID"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the message to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Move the message corresponding to the given messageID to another queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "messageID",
                                    "type": "long",
                                    "desc": "A message ID"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the message to"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Move the message corresponding to the given messageID to another queue. rejectDuplicate=false on this case"
                        }
                    ],
                    "moveMessages": [
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages). RejectDuplicates=false on this case."
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                },
                                {
                                    "name": "otherQueueName",
                                    "type": "java.lang.String",
                                    "desc": "The name of the queue to move the messages to"
                                },
                                {
                                    "name": "rejectDuplicates",
                                    "type": "boolean",
                                    "desc": "Reject messages identified as duplicate by the duplicate message"
                                },
                                {
                                    "name": "messageCount",
                                    "type": "int",
                                    "desc": "Number of messages to move."
                                }
                            ],
                            "ret": "int",
                            "desc": "Move the messages corresponding to the given filter (and returns the number of moved messages)"
                        }
                    ],
                    "resetMessageCounter": {
                        "args": [],
                        "ret": "void",
                        "desc": "Reset the message counters"
                    },
                    "sendMessageToDeadLetterAddress": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Send the message corresponding to the given messageID to this queue's Dead Letter Address"
                    },
                    "removeMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Remove the message corresponding to the given messageID"
                    },
                    "listScheduledMessages": {
                        "args": [],
                        "ret": "[Ljava.util.Map;",
                        "desc": "List the messages scheduled for delivery"
                    },
                    "listDeliveringMessages": {
                        "args": [],
                        "ret": "java.util.Map",
                        "desc": "List all messages being delivered per consumer"
                    },
                    "resetMessagesAcknowledged": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesAcknowledged property"
                    },
                    "changeMessagesPriority": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            },
                            {
                                "name": "newPriority",
                                "type": "int",
                                "desc": "the new priority (between 0 and 9)"
                            }
                        ],
                        "ret": "int",
                        "desc": "Change the priority of the messages corresponding to the given filter"
                    },
                    "listMessageCounterHistoryAsHTML": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters history HTML"
                    },
                    "listConsumersAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the existent consumers on the Queue"
                    },
                    "enable": {
                        "args": [],
                        "ret": "void",
                        "desc": "Enables routing of messages to the Queue"
                    },
                    "removeAllMessages": {
                        "args": [],
                        "ret": "int",
                        "desc": "Remove all the messages from the Queue (and returns the number of removed messages)"
                    },
                    "retryMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Retry the message corresponding to the given messageID to the original queue"
                    },
                    "listMessagesAsJSON": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "List all the messages in the queue matching the given filter and returns them using JSON"
                    },
                    "listGroupsAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List all the existent group to consumers mappings on the Queue"
                    },
                    "removeMessages": [
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "int",
                            "desc": "Remove the messages corresponding to the given filter (and returns the number of removed messages)"
                        },
                        {
                            "args": [
                                {
                                    "name": "flushLimit",
                                    "type": "int",
                                    "desc": "Limit to flush transactions during the operation to avoid OutOfMemory"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "int",
                            "desc": "Remove the messages corresponding to the given filter (and returns the number of removed messages)"
                        }
                    ],
                    "resume": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resumes delivery of queued messages and gets the queue out of paused state. It will also affected the state of a persisted pause."
                    },
                    "flushExecutor": {
                        "args": [],
                        "ret": "void",
                        "desc": "Flush internal executors"
                    },
                    "countDeliveringMessages": [
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "This filter separate account messages"
                                },
                                {
                                    "name": "groupByProperty",
                                    "type": "java.lang.String",
                                    "desc": "This property to group by"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Returns the number of the messages in the queue matching the given filter, grouped by the given property field"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue matching the given filter"
                        }
                    ],
                    "resetAllGroups": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets all groups"
                    },
                    "countMessages": [
                        {
                            "args": [],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "This filter separate account messages"
                                },
                                {
                                    "name": "groupByProperty",
                                    "type": "java.lang.String",
                                    "desc": "This property to group by"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Returns the number of the messages in the queue matching the given filter, grouped by the given property field"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "long",
                            "desc": "Returns the number of the messages in the queue matching the given filter"
                        }
                    ],
                    "listMessageCounterAsHTML": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters as HTML"
                    },
                    "resetMessagesKilled": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesKilled property"
                    },
                    "listMessageCounterHistory": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters history"
                    },
                    "sendMessage": [
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected destination."
                        },
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                },
                                {
                                    "name": "createMessageId",
                                    "type": "boolean",
                                    "desc": "whether or not to auto generate a Message ID"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected destination."
                        }
                    ],
                    "listMessageCounter": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "List the message counters"
                    },
                    "resetMessagesAdded": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resets the MessagesAdded property"
                    },
                    "pause": [
                        {
                            "args": [
                                {
                                    "name": "persist",
                                    "type": "boolean",
                                    "desc": "if true, the pause state will be persisted."
                                }
                            ],
                            "ret": "void",
                            "desc": "Pauses the Queue"
                        },
                        {
                            "args": [],
                            "ret": "void",
                            "desc": "Pauses the Queue"
                        }
                    ],
                    "listDeliveringMessagesAsJSON": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "list all messages being delivered per consumer using JSON form"
                    },
                    "expireMessage": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Remove the message corresponding to the given messageID"
                    },
                    "resetGroup": {
                        "args": [
                            {
                                "name": "groupID",
                                "type": "java.lang.String",
                                "desc": "ID of group to reset"
                            }
                        ],
                        "ret": "void",
                        "desc": "Reset the specified group"
                    },
                    "changeMessagePriority": {
                        "args": [
                            {
                                "name": "messageID",
                                "type": "long",
                                "desc": "A message ID"
                            },
                            {
                                "name": "newPriority",
                                "type": "int",
                                "desc": "the new priority (between 0 and 9)"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "Change the priority of the message corresponding to the given messageID"
                    },
                    "disable": {
                        "args": [],
                        "ret": "void",
                        "desc": "Disables routing of messages to the Queue"
                    },
                    "sendMessagesToDeadLetterAddress": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter (can be empty)"
                            }
                        ],
                        "ret": "int",
                        "desc": "Send the messages corresponding to the given filter to this queue's Dead Letter Address"
                    },
                    "retryMessages": {
                        "args": [],
                        "ret": "int",
                        "desc": "Retry all messages on a DLQ to their respective original queues"
                    },
                    "expireMessages": {
                        "args": [
                            {
                                "name": "filter",
                                "type": "java.lang.String",
                                "desc": "A message filter"
                            }
                        ],
                        "ret": "int",
                        "desc": "Expire the messages corresponding to the given filter (and returns the number of expired messages)"
                    },
                    "browse": [
                        {
                            "args": [],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "page",
                                    "type": "int",
                                    "desc": "Current page"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page size"
                                },
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "filter"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "filter",
                                    "type": "java.lang.String",
                                    "desc": "A message filter (can be empty)"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        },
                        {
                            "args": [
                                {
                                    "name": "page",
                                    "type": "int",
                                    "desc": "Current page"
                                },
                                {
                                    "name": "pageSize",
                                    "type": "int",
                                    "desc": "Page size"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "Browse Messages"
                        }
                    ]
                },
                "attr": {
                    "ConfigurationManaged": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "is this queue managed by configuration (broker.xml)"
                    },
                    "Address": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "address this queue is bound to"
                    },
                    "MaxConsumers": {
                        "rw": false,
                        "type": "int",
                        "desc": "maximum number of consumers allowed on this queue at any one time"
                    },
                    "Exclusive": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "If the queue should route exclusively to one consumer"
                    },
                    "DurableDeliveringSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable messages that this queue is currently delivering to its consumers"
                    },
                    "PersistentSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of all messages (including durable and non-durable) currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "GroupBuckets": {
                        "rw": false,
                        "type": "int",
                        "desc": "Get the group buckets"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "name of this queue"
                    },
                    "MessagesKilled": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages removed from this queue since it was created due to exceeding the max delivery attempts"
                    },
                    "DelayBeforeDispatch": {
                        "rw": false,
                        "type": "long",
                        "desc": "Return the Consumers Before Dispatch"
                    },
                    "DurableMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of durable messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "PreparedTransactionMessageCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "return how many messages are stuck in prepared transactions"
                    },
                    "ID": {
                        "rw": false,
                        "type": "long",
                        "desc": "ID of this queue"
                    },
                    "DeadLetterAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "dead-letter address associated with this queue"
                    },
                    "RetroactiveResource": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is used for a retroactive address"
                    },
                    "MessagesAcknowledged": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages acknowledged from this queue since it was created"
                    },
                    "MessagesExpired": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages expired from this queue since it was created"
                    },
                    "DeliveringSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of messages that this queue is currently delivering to its consumers"
                    },
                    "LastValue": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "is this queue a last value queue"
                    },
                    "LastValueKey": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "last value key"
                    },
                    "DurableScheduledSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable scheduled messages in this queue"
                    },
                    "GroupRebalance": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the groups of this queue are automatically rebalanced"
                    },
                    "GroupFirstKey": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Get the header key to notify a consumer of a group change"
                    },
                    "User": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "the user that created the queue"
                    },
                    "GroupCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "Get the current number of active groups"
                    },
                    "PurgeOnNoConsumers": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "purge this queue when the last consumer disconnects"
                    },
                    "ScheduledCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of scheduled messages in this queue"
                    },
                    "DurableScheduledCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of durable scheduled messages in this queue"
                    },
                    "ConsumersBeforeDispatch": {
                        "rw": false,
                        "type": "int",
                        "desc": "Return the Consumers Before Dispatch"
                    },
                    "ExpiryAddress": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "expiry address associated with this queue"
                    },
                    "FirstMessageAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "first message on the queue as JSON"
                    },
                    "GroupRebalancePauseDispatch": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the dispatch is paused when groups of this queue are automatically rebalanced"
                    },
                    "Paused": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether the queue is paused"
                    },
                    "RoutingType": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "routing type of this queue"
                    },
                    "DurableDeliveringCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of durable messages that this queue is currently delivering to its consumers"
                    },
                    "FirstMessageAge": {
                        "rw": false,
                        "type": "java.lang.Long",
                        "desc": "age of the first message in milliseconds"
                    },
                    "DurablePersistentSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of durable messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    },
                    "MessagesAdded": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages added to this queue since it was created"
                    },
                    "ConsumerCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of consumers consuming messages from this queue"
                    },
                    "RingSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "Get the ring size"
                    },
                    "DeliveringCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of messages that this queue is currently delivering to its consumers"
                    },
                    "Enabled": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "if the queue is enabled, default it is enabled, when disabled messages will not be routed to the queue"
                    },
                    "AcknowledgeAttempts": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages acknowledged attempts from this queue since it was created"
                    },
                    "Temporary": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is temporary"
                    },
                    "FirstMessageTimestamp": {
                        "rw": false,
                        "type": "java.lang.Long",
                        "desc": "timestamp of the first message in milliseconds"
                    },
                    "Filter": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "filter associated with this queue"
                    },
                    "ScheduledSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "persistent size of scheduled messages in this queue"
                    },
                    "Durable": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this queue is durable"
                    },
                    "MessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages currently in this queue (includes scheduled, paged, and in-delivery messages)"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.QueueControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "address=\"ExpiryQueue\",broker=\"0.0.0.0\",component=addresses": {
                "op": {
                    "resume": {
                        "args": [],
                        "ret": "void",
                        "desc": "Resumes the queues bound to this address"
                    },
                    "clearDuplicateIdCache": {
                        "args": [],
                        "ret": "boolean",
                        "desc": "clearDuplicateIdCache"
                    },
                    "sendMessage": [
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                },
                                {
                                    "name": "createMessageId",
                                    "type": "boolean",
                                    "desc": "whether or not to auto generate a Message ID"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        },
                        {
                            "args": [
                                {
                                    "name": "headers",
                                    "type": "java.util.Map",
                                    "desc": "The headers to add to the message"
                                },
                                {
                                    "name": "type",
                                    "type": "int",
                                    "desc": "A type for the message"
                                },
                                {
                                    "name": "body",
                                    "type": "java.lang.String",
                                    "desc": "The body (byte[]) of the message encoded as a string using Base64"
                                },
                                {
                                    "name": "durable",
                                    "type": "boolean",
                                    "desc": "Whether the message is durable"
                                },
                                {
                                    "name": "user",
                                    "type": "java.lang.String",
                                    "desc": "The user to authenticate with"
                                },
                                {
                                    "name": "password",
                                    "type": "java.lang.String",
                                    "desc": "The users password to authenticate with"
                                }
                            ],
                            "ret": "java.lang.String",
                            "desc": "Sends a TextMessage to a password-protected address."
                        }
                    ],
                    "purge": {
                        "args": [],
                        "ret": "long",
                        "desc": "Purges the queues bound to this address. Returns the total number of messages purged."
                    },
                    "pause": [
                        {
                            "args": [],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        },
                        {
                            "args": [
                                {
                                    "name": "persist",
                                    "type": "boolean",
                                    "desc": "if true, the pause state will be persisted."
                                }
                            ],
                            "ret": "void",
                            "desc": "Pauses the queues bound to this address"
                        }
                    ]
                },
                "attr": {
                    "RoutingTypesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Get the routing types enabled on this address as JSON"
                    },
                    "RetroactiveResource": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is used for a retroactive address"
                    },
                    "Address": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "managed address"
                    },
                    "NumberOfBytesPerPage": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of bytes used by each page for this address"
                    },
                    "AddressSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the number of estimated bytes being used by all the queue(s) bound to this address; used to control paging and blocking"
                    },
                    "CurrentDuplicateIdCacheSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "the size of the duplicate ID cache for this address"
                    },
                    "Internal": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created for the broker's internal use"
                    },
                    "Paging": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is paging"
                    },
                    "Roles": {
                        "rw": false,
                        "type": "[Ljava.lang.Object;",
                        "desc": "roles (name and permissions) associated with this address"
                    },
                    "RolesAsJSON": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "roles  (name and permissions) associated with this address using JSON serialization"
                    },
                    "BindingNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of all bindings (both queues and diverts) bound to this address"
                    },
                    "NumberOfPages": {
                        "rw": false,
                        "type": "int",
                        "desc": "number of pages used by this address"
                    },
                    "UnRoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages not routed to any bindings"
                    },
                    "AllQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of both the local & remote queue(s) bound to this address"
                    },
                    "QueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the local queue(s) bound to this address"
                    },
                    "Temporary": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address is temporary"
                    },
                    "AutoCreated": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "whether this address was created automatically in response to client action"
                    },
                    "RoutingTypes": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Get the routing types enabled on this address"
                    },
                    "NumberOfMessages": {
                        "rw": false,
                        "type": "long",
                        "desc": "the sum of messages on queue(s), including messages in delivery"
                    },
                    "RemoteQueueNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "names of the remote queue(s) bound to this address"
                    },
                    "RoutedMessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages routed to one or more bindings"
                    },
                    "MessageCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "number of messages currently in all queues bound to this address (includes scheduled, paged, and in-delivery messages)"
                    },
                    "Paused": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "indicates if the queues bound to this address are paused"
                    }
                },
                "class": "org.apache.activemq.artemis.core.management.impl.AddressControlImpl",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "java.util.logging": {
            "type=Logging": {
                "op": {
                    "getLoggerLevel": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "getLoggerLevel"
                    },
                    "getParentLoggerName": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "getParentLoggerName"
                    },
                    "setLoggerLevel": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setLoggerLevel"
                    }
                },
                "attr": {
                    "LoggerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "LoggerNames"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "jdk.management.jfr": {
            "type=FlightRecorder": {
                "op": {
                    "getRecordingOptions": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "javax.management.openmbean.TabularData",
                        "desc": "getRecordingOptions"
                    },
                    "takeSnapshot": {
                        "args": [],
                        "ret": "long",
                        "desc": "takeSnapshot"
                    },
                    "closeRecording": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "void",
                        "desc": "closeRecording"
                    },
                    "newRecording": {
                        "args": [],
                        "ret": "long",
                        "desc": "newRecording"
                    },
                    "openStream": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "javax.management.openmbean.TabularData",
                                "desc": "p1"
                            }
                        ],
                        "ret": "long",
                        "desc": "openStream"
                    },
                    "setRecordingSettings": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "javax.management.openmbean.TabularData",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setRecordingSettings"
                    },
                    "cloneRecording": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "boolean",
                                "desc": "p1"
                            }
                        ],
                        "ret": "long",
                        "desc": "cloneRecording"
                    },
                    "setRecordingOptions": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "javax.management.openmbean.TabularData",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setRecordingOptions"
                    },
                    "copyTo": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "copyTo"
                    },
                    "startRecording": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "void",
                        "desc": "startRecording"
                    },
                    "closeStream": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "void",
                        "desc": "closeStream"
                    },
                    "getRecordingSettings": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "javax.management.openmbean.TabularData",
                        "desc": "getRecordingSettings"
                    },
                    "setPredefinedConfiguration": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setPredefinedConfiguration"
                    },
                    "readStream": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "[B",
                        "desc": "readStream"
                    },
                    "setConfiguration": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setConfiguration"
                    },
                    "stopRecording": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "long",
                                "desc": "p0"
                            }
                        ],
                        "ret": "boolean",
                        "desc": "stopRecording"
                    }
                },
                "attr": {
                    "EventTypes": {
                        "rw": false,
                        "type": "[Ljavax.management.openmbean.CompositeData;",
                        "desc": "EventTypes"
                    },
                    "Recordings": {
                        "rw": false,
                        "type": "[Ljavax.management.openmbean.CompositeData;",
                        "desc": "Recordings"
                    },
                    "Configurations": {
                        "rw": false,
                        "type": "[Ljavax.management.openmbean.CompositeData;",
                        "desc": "Configurations"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "jdk.management.jfr.FlightRecorderMXBeanImpl",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "java.lang": {
            "name=G1 Survivor Space,type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Threading": {
                "op": {
                    "getThreadCpuTime": [
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "[J",
                            "desc": "getThreadCpuTime"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "long",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "long",
                            "desc": "getThreadCpuTime"
                        }
                    ],
                    "getThreadInfo": [
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "boolean",
                                    "desc": "p1"
                                },
                                {
                                    "name": "p2",
                                    "type": "boolean",
                                    "desc": "p2"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "getThreadInfo"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "boolean",
                                    "desc": "p1"
                                },
                                {
                                    "name": "p2",
                                    "type": "boolean",
                                    "desc": "p2"
                                },
                                {
                                    "name": "p3",
                                    "type": "int",
                                    "desc": "p3"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "getThreadInfo"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "int",
                                    "desc": "p1"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "getThreadInfo"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "getThreadInfo"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "long",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "javax.management.openmbean.CompositeData",
                            "desc": "getThreadInfo"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "long",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "int",
                                    "desc": "p1"
                                }
                            ],
                            "ret": "javax.management.openmbean.CompositeData",
                            "desc": "getThreadInfo"
                        }
                    ],
                    "findDeadlockedThreads": {
                        "args": [],
                        "ret": "[J",
                        "desc": "findDeadlockedThreads"
                    },
                    "getThreadAllocatedBytes": [
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "[J",
                            "desc": "getThreadAllocatedBytes"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "long",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "long",
                            "desc": "getThreadAllocatedBytes"
                        }
                    ],
                    "getThreadUserTime": [
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "[J",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "[J",
                            "desc": "getThreadUserTime"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "long",
                                    "desc": "p0"
                                }
                            ],
                            "ret": "long",
                            "desc": "getThreadUserTime"
                        }
                    ],
                    "findMonitorDeadlockedThreads": {
                        "args": [],
                        "ret": "[J",
                        "desc": "findMonitorDeadlockedThreads"
                    },
                    "resetPeakThreadCount": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakThreadCount"
                    },
                    "dumpAllThreads": [
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "boolean",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "boolean",
                                    "desc": "p1"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "dumpAllThreads"
                        },
                        {
                            "args": [
                                {
                                    "name": "p0",
                                    "type": "boolean",
                                    "desc": "p0"
                                },
                                {
                                    "name": "p1",
                                    "type": "boolean",
                                    "desc": "p1"
                                },
                                {
                                    "name": "p2",
                                    "type": "int",
                                    "desc": "p2"
                                }
                            ],
                            "ret": "[Ljavax.management.openmbean.CompositeData;",
                            "desc": "dumpAllThreads"
                        }
                    ]
                },
                "attr": {
                    "ThreadAllocatedMemorySupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "ThreadAllocatedMemorySupported"
                    },
                    "ThreadContentionMonitoringEnabled": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "ThreadContentionMonitoringEnabled"
                    },
                    "CurrentThreadAllocatedBytes": {
                        "rw": false,
                        "type": "long",
                        "desc": "CurrentThreadAllocatedBytes"
                    },
                    "TotalStartedThreadCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalStartedThreadCount"
                    },
                    "CurrentThreadUserTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "CurrentThreadUserTime"
                    },
                    "CurrentThreadCpuTimeSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CurrentThreadCpuTimeSupported"
                    },
                    "PeakThreadCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "PeakThreadCount"
                    },
                    "AllThreadIds": {
                        "rw": false,
                        "type": "[J",
                        "desc": "AllThreadIds"
                    },
                    "ThreadAllocatedMemoryEnabled": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "ThreadAllocatedMemoryEnabled"
                    },
                    "CurrentThreadCpuTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "CurrentThreadCpuTime"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "ThreadContentionMonitoringSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "ThreadContentionMonitoringSupported"
                    },
                    "ThreadCpuTimeSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "ThreadCpuTimeSupported"
                    },
                    "ThreadCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "ThreadCount"
                    },
                    "ThreadCpuTimeEnabled": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "ThreadCpuTimeEnabled"
                    },
                    "ObjectMonitorUsageSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "ObjectMonitorUsageSupported"
                    },
                    "SynchronizerUsageSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "SynchronizerUsageSupported"
                    },
                    "DaemonThreadCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "DaemonThreadCount"
                    }
                },
                "class": "com.sun.management.internal.HotSpotThreadImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Memory": {
                "op": {
                    "gc": {
                        "args": [],
                        "ret": "void",
                        "desc": "gc"
                    }
                },
                "attr": {
                    "ObjectPendingFinalizationCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "ObjectPendingFinalizationCount"
                    },
                    "Verbose": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "Verbose"
                    },
                    "HeapMemoryUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "HeapMemoryUsage"
                    },
                    "NonHeapMemoryUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "NonHeapMemoryUsage"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.MemoryImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=Metaspace,type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=G1 Eden Space,type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=OperatingSystem": {
                "attr": {
                    "OpenFileDescriptorCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "OpenFileDescriptorCount"
                    },
                    "CommittedVirtualMemorySize": {
                        "rw": false,
                        "type": "long",
                        "desc": "CommittedVirtualMemorySize"
                    },
                    "FreePhysicalMemorySize": {
                        "rw": false,
                        "type": "long",
                        "desc": "FreePhysicalMemorySize"
                    },
                    "SystemLoadAverage": {
                        "rw": false,
                        "type": "double",
                        "desc": "SystemLoadAverage"
                    },
                    "Arch": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Arch"
                    },
                    "ProcessCpuLoad": {
                        "rw": false,
                        "type": "double",
                        "desc": "ProcessCpuLoad"
                    },
                    "FreeSwapSpaceSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "FreeSwapSpaceSize"
                    },
                    "TotalPhysicalMemorySize": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalPhysicalMemorySize"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "TotalSwapSpaceSize": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalSwapSpaceSize"
                    },
                    "TotalMemorySize": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalMemorySize"
                    },
                    "ProcessCpuTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "ProcessCpuTime"
                    },
                    "MaxFileDescriptorCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "MaxFileDescriptorCount"
                    },
                    "SystemCpuLoad": {
                        "rw": false,
                        "type": "double",
                        "desc": "SystemCpuLoad"
                    },
                    "Version": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Version"
                    },
                    "AvailableProcessors": {
                        "rw": false,
                        "type": "int",
                        "desc": "AvailableProcessors"
                    },
                    "CpuLoad": {
                        "rw": false,
                        "type": "double",
                        "desc": "CpuLoad"
                    },
                    "FreeMemorySize": {
                        "rw": false,
                        "type": "long",
                        "desc": "FreeMemorySize"
                    }
                },
                "class": "com.sun.management.internal.OperatingSystemImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=CodeCacheManager,type=MemoryManager": {
                "attr": {
                    "MemoryPoolNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryPoolNames"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.MemoryManagerImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=CodeHeap 'non-nmethods',type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=G1 Old Gen,type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=Compressed Class Space,type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=G1 Old Generation,type=GarbageCollector": {
                "attr": {
                    "MemoryPoolNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryPoolNames"
                    },
                    "LastGcInfo": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "LastGcInfo"
                    },
                    "CollectionTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionTime"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionCount"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "com.sun.management.internal.GarbageCollectorExtImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=CodeHeap 'non-profiled nmethods',type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=ClassLoading": {
                "attr": {
                    "LoadedClassCount": {
                        "rw": false,
                        "type": "int",
                        "desc": "LoadedClassCount"
                    },
                    "UnloadedClassCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UnloadedClassCount"
                    },
                    "Verbose": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "Verbose"
                    },
                    "TotalLoadedClassCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalLoadedClassCount"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.ClassLoadingImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=CodeHeap 'profiled nmethods',type=MemoryPool": {
                "op": {
                    "resetPeakUsage": {
                        "args": [],
                        "ret": "void",
                        "desc": "resetPeakUsage"
                    }
                },
                "attr": {
                    "UsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "UsageThresholdCount"
                    },
                    "Usage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "Usage"
                    },
                    "MemoryManagerNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryManagerNames"
                    },
                    "UsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdSupported"
                    },
                    "UsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "UsageThreshold"
                    },
                    "CollectionUsageThresholdCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionUsageThresholdCount"
                    },
                    "PeakUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "PeakUsage"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "UsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "UsageThresholdExceeded"
                    },
                    "CollectionUsageThreshold": {
                        "rw": true,
                        "type": "long",
                        "desc": "CollectionUsageThreshold"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "Type": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Type"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionUsageThresholdSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdSupported"
                    },
                    "CollectionUsage": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "CollectionUsage"
                    },
                    "CollectionUsageThresholdExceeded": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CollectionUsageThresholdExceeded"
                    }
                },
                "class": "sun.management.MemoryPoolImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Compilation": {
                "attr": {
                    "CompilationTimeMonitoringSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "CompilationTimeMonitoringSupported"
                    },
                    "TotalCompilationTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalCompilationTime"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.CompilationImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=G1 Young Generation,type=GarbageCollector": {
                "attr": {
                    "MemoryPoolNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryPoolNames"
                    },
                    "LastGcInfo": {
                        "rw": false,
                        "type": "javax.management.openmbean.CompositeData",
                        "desc": "LastGcInfo"
                    },
                    "CollectionTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionTime"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "CollectionCount": {
                        "rw": false,
                        "type": "long",
                        "desc": "CollectionCount"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "com.sun.management.internal.GarbageCollectorExtImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "name=Metaspace Manager,type=MemoryManager": {
                "attr": {
                    "MemoryPoolNames": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "MemoryPoolNames"
                    },
                    "Valid": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "Valid"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.MemoryManagerImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Runtime": {
                "attr": {
                    "SpecVendor": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "SpecVendor"
                    },
                    "ClassPath": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "ClassPath"
                    },
                    "InputArguments": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "InputArguments"
                    },
                    "Uptime": {
                        "rw": false,
                        "type": "long",
                        "desc": "Uptime"
                    },
                    "VmName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "VmName"
                    },
                    "StartTime": {
                        "rw": false,
                        "type": "long",
                        "desc": "StartTime"
                    },
                    "Pid": {
                        "rw": false,
                        "type": "long",
                        "desc": "Pid"
                    },
                    "VmVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "VmVersion"
                    },
                    "SpecName": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "SpecName"
                    },
                    "ManagementSpecVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "ManagementSpecVersion"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    },
                    "VmVendor": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "VmVendor"
                    },
                    "LibraryPath": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "LibraryPath"
                    },
                    "BootClassPath": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "BootClassPath"
                    },
                    "SpecVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "SpecVersion"
                    },
                    "SystemProperties": {
                        "rw": false,
                        "type": "javax.management.openmbean.TabularData",
                        "desc": "SystemProperties"
                    },
                    "BootClassPathSupported": {
                        "rw": false,
                        "type": "boolean",
                        "desc": "BootClassPathSupported"
                    }
                },
                "class": "sun.management.RuntimeImpl",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "com.sun.management": {
            "type=HotSpotDiagnostic": {
                "op": {
                    "setVMOption": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "setVMOption"
                    },
                    "getVMOption": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            }
                        ],
                        "ret": "javax.management.openmbean.CompositeData",
                        "desc": "getVMOption"
                    },
                    "dumpHeap": {
                        "args": [
                            {
                                "name": "p0",
                                "type": "java.lang.String",
                                "desc": "p0"
                            },
                            {
                                "name": "p1",
                                "type": "boolean",
                                "desc": "p1"
                            }
                        ],
                        "ret": "void",
                        "desc": "dumpHeap"
                    }
                },
                "attr": {
                    "DiagnosticOptions": {
                        "rw": false,
                        "type": "[Ljavax.management.openmbean.CompositeData;",
                        "desc": "DiagnosticOptions"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "com.sun.management.internal.HotSpotDiagnostic",
                "desc": "Information on the management interface of the MBean"
            },
            "type=DiagnosticCommand": {
                "op": {
                    "vmUptime": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print VM uptime."
                    },
                    "jfrDump": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Copies contents of a JFR recording to file. Either the name or the recording id must be specified."
                    },
                    "jfrStart": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Starts a new JFR recording"
                    },
                    "gcClassStats": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "(Deprecated) Provide statistics about Java class meta data."
                    },
                    "threadPrint": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print all threads with stacktraces."
                    },
                    "jfrStop": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Stops a JFR recording"
                    },
                    "compilerCodelist": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print all compiled methods in code cache that are alive"
                    },
                    "vmEvents": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print VM event logs"
                    },
                    "jfrCheck": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Checks running JFR recording(s)"
                    },
                    "vmSymboltable": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Dump symbol table."
                    },
                    "gcRun": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Call java.lang.System.gc()."
                    },
                    "vmClassloaders": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Prints classloader hierarchy."
                    },
                    "vmMetaspace": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Prints the statistics for the metaspace"
                    },
                    "compilerDirectivesPrint": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print all active compiler directives."
                    },
                    "vmSetFlag": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Sets VM flag option using the provided value."
                    },
                    "compilerDirectivesAdd": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Add compiler directives from file."
                    },
                    "vmDynlibs": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print loaded dynamic libraries."
                    },
                    "vmPrintTouchedMethods": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print all methods that have ever been touched during the lifetime of this JVM."
                    },
                    "compilerCodecache": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print code cache layout and bounds."
                    },
                    "vmNativeMemory": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print native memory usage"
                    },
                    "gcClassHistogram": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Provide statistics about the Java heap usage."
                    },
                    "gcRunFinalization": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Call java.lang.System.runFinalization()."
                    },
                    "jvmtiDataDump": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Signal the JVM to do a data-dump request for JVMTI."
                    },
                    "gcFinalizerInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Provide information about Java finalization queue."
                    },
                    "vmStringtable": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Dump string table."
                    },
                    "help": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "For more information about a specific command use 'help <command>'. With no argument this will show a list of available commands. 'help all' will show help for all commands."
                    },
                    "jfrConfigure": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Configure JFR"
                    },
                    "vmSystemProperties": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print system properties."
                    },
                    "compilerDirectivesClear": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Remove all compiler directives."
                    },
                    "vmSystemdictionary": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Prints the statistics for dictionary hashtable sizes and bucket length"
                    },
                    "vmClassloaderStats": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print statistics about all ClassLoaders."
                    },
                    "compilerDirectivesRemove": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Remove latest added compiler directive."
                    },
                    "gcHeapInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Provide generic Java heap information."
                    },
                    "compilerCodeHeapAnalytics": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print CodeHeap analytics"
                    },
                    "vmVersion": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print JVM version information."
                    },
                    "vmInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print information about JVM environment and status."
                    },
                    "compilerQueue": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print methods queued for compilation."
                    },
                    "vmFlags": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print VM flag options and their current values."
                    },
                    "vmLog": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Lists current log configuration, enables\/disables\/configures a log output, or rotates all logs."
                    },
                    "jvmtiAgentLoad": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Load JVMTI native agent."
                    },
                    "vmClassHierarchy": {
                        "args": [
                            {
                                "name": "arguments",
                                "type": "[Ljava.lang.String;",
                                "desc": "Array of Diagnostic Commands Arguments and Options"
                            }
                        ],
                        "ret": "java.lang.String",
                        "desc": "Print a list of all loaded classes, indented to show the class hiearchy. The name of each class is followed by the ClassLoaderData* of its ClassLoader, or \"null\" if loaded by the bootstrap class loader."
                    },
                    "vmCommandLine": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Print the command line used to start this VM instance."
                    }
                },
                "class": "com.sun.management.internal.DiagnosticCommandImpl",
                "desc": "Diagnostic Commands"
            }
        },
        "jmx4perl": {
            "qualifier=hawtio,type=Config": {
                "op": {
                    "setHistoryEntriesForOperation": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryLimitForOperation": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "long",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "resetDebugInfo": {
                        "args": [],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "resetHistoryEntries": {
                        "args": [],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryEntriesForAttribute": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryLimitForAttribute": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p6",
                                "type": "long",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "debugInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Operation exposed for management"
                    }
                },
                "attr": {
                    "HistorySize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "MaxDebugEntries": {
                        "rw": true,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "HistoryMaxEntries": {
                        "rw": true,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "Debug": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "org.jolokia.backend.Config",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "java.nio": {
            "name=direct,type=BufferPool": {
                "attr": {
                    "TotalCapacity": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalCapacity"
                    },
                    "MemoryUsed": {
                        "rw": false,
                        "type": "long",
                        "desc": "MemoryUsed"
                    },
                    "Count": {
                        "rw": false,
                        "type": "long",
                        "desc": "Count"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.ManagementFactoryHelper$1",
                "desc": "Information on the management interface of the MBean"
            },
            "name=mapped,type=BufferPool": {
                "attr": {
                    "TotalCapacity": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalCapacity"
                    },
                    "MemoryUsed": {
                        "rw": false,
                        "type": "long",
                        "desc": "MemoryUsed"
                    },
                    "Count": {
                        "rw": false,
                        "type": "long",
                        "desc": "Count"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.ManagementFactoryHelper$1",
                "desc": "Information on the management interface of the MBean"
            },
            "name=mapped - 'non-volatile memory',type=BufferPool": {
                "attr": {
                    "TotalCapacity": {
                        "rw": false,
                        "type": "long",
                        "desc": "TotalCapacity"
                    },
                    "MemoryUsed": {
                        "rw": false,
                        "type": "long",
                        "desc": "MemoryUsed"
                    },
                    "Count": {
                        "rw": false,
                        "type": "long",
                        "desc": "Count"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Name"
                    },
                    "ObjectName": {
                        "rw": false,
                        "type": "javax.management.ObjectName",
                        "desc": "ObjectName"
                    }
                },
                "class": "sun.management.ManagementFactoryHelper$1",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "hawtio": {
            "area=jmx,name=ArtemisJMXSecurity,type=security": {
                "op": {
                    "canInvoke": [
                        {
                            "args": [
                                {
                                    "name": "p 1",
                                    "type": "java.util.Map",
                                    "desc": "parameter 1"
                                }
                            ],
                            "ret": "javax.management.openmbean.TabularData",
                            "desc": "Can invoke a number of Objects"
                        },
                        {
                            "args": [
                                {
                                    "name": "p 1",
                                    "type": "java.lang.String",
                                    "desc": "parameter 1"
                                },
                                {
                                    "name": "p 2",
                                    "type": "java.lang.String",
                                    "desc": "parameter 2"
                                },
                                {
                                    "name": "p 3",
                                    "type": "[Ljava.lang.String;",
                                    "desc": "parameter 3"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Can invoke an Object"
                        },
                        {
                            "args": [
                                {
                                    "name": "p 1",
                                    "type": "java.lang.String",
                                    "desc": "parameter 1"
                                },
                                {
                                    "name": "p 2",
                                    "type": "java.lang.String",
                                    "desc": "parameter 2"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Can invoke an Object"
                        },
                        {
                            "args": [
                                {
                                    "name": "p 1",
                                    "type": "java.lang.String",
                                    "desc": "parameter 1"
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Can invoke an Object"
                        }
                    ]
                },
                "class": "org.apache.activemq.artemis.core.server.management.impl.HawtioSecurityControlImpl",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Registry": {
                "attr": {
                    "UpdateCounter": {
                        "rw": false,
                        "type": "long",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "io.hawt.jmx.PluginRegistry",
                "desc": "Information on the management interface of the MBean"
            },
            "area=jmx,name=HawtioDummyJMXSecurity,rank=0,type=security": {
                "op": {
                    "canInvoke": [
                        {
                            "args": [
                                {
                                    "name": "p1",
                                    "type": "java.lang.String",
                                    "desc": ""
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Operation exposed for management"
                        },
                        {
                            "args": [
                                {
                                    "name": "p1",
                                    "type": "java.util.Map",
                                    "desc": ""
                                }
                            ],
                            "ret": "javax.management.openmbean.TabularData",
                            "desc": "Operation exposed for management"
                        },
                        {
                            "args": [
                                {
                                    "name": "p1",
                                    "type": "java.lang.String",
                                    "desc": ""
                                },
                                {
                                    "name": "p2",
                                    "type": "java.lang.String",
                                    "desc": ""
                                },
                                {
                                    "name": "p3",
                                    "type": "[Ljava.lang.String;",
                                    "desc": ""
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Operation exposed for management"
                        },
                        {
                            "args": [
                                {
                                    "name": "p1",
                                    "type": "java.lang.String",
                                    "desc": ""
                                },
                                {
                                    "name": "p2",
                                    "type": "java.lang.String",
                                    "desc": ""
                                }
                            ],
                            "ret": "boolean",
                            "desc": "Operation exposed for management"
                        }
                    ]
                },
                "class": "io.hawt.jmx.JMXSecurity",
                "desc": "Information on the management interface of the MBean"
            },
            "name=artemis-plugin,type=plugin": {
                "attr": {
                    "Context": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    },
                    "Scripts": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Attribute exposed for management"
                    },
                    "Domain": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "io.hawt.web.plugin.HawtioPlugin",
                "desc": "Information on the management interface of the MBean"
            },
            "type=About": {
                "attr": {
                    "HawtioVersion": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "io.hawt.jmx.About",
                "desc": "Information on the management interface of the MBean"
            },
            "name=activemq-branding,type=plugin": {
                "attr": {
                    "Context": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    },
                    "Scripts": {
                        "rw": false,
                        "type": "[Ljava.lang.String;",
                        "desc": "Attribute exposed for management"
                    },
                    "Domain": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    },
                    "Name": {
                        "rw": false,
                        "type": "java.lang.String",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "io.hawt.web.plugin.HawtioPlugin",
                "desc": "Information on the management interface of the MBean"
            },
            "type=QuartzFacade": {
                "op": {
                    "updateCronTrigger": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p6",
                                "type": "java.lang.String",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "updateSimpleTrigger": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p6",
                                "type": "long",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    }
                },
                "class": "io.hawt.jmx.QuartzFacade",
                "desc": "Information on the management interface of the MBean"
            },
            "type=TreeWatcher": {
                "attr": {
                    "Counter": {
                        "rw": false,
                        "type": "long",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "io.hawt.jmx.JmxTreeWatcher",
                "desc": "Information on the management interface of the MBean"
            },
            "name=RBACRegistry,type=security": {
                "op": {
                    "list": {
                        "args": [],
                        "ret": "java.util.Map",
                        "desc": "Operation exposed for management"
                    }
                },
                "class": "io.hawt.jmx.RBACRegistry",
                "desc": "Information on the management interface of the MBean"
            }
        },
        "jolokia": {
            "qualifier=hawtio,type=Config": {
                "op": {
                    "setHistoryEntriesForOperation": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryLimitForOperation": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "long",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "resetDebugInfo": {
                        "args": [],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "resetHistoryEntries": {
                        "args": [],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryEntriesForAttribute": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "setHistoryLimitForAttribute": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p4",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p5",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p6",
                                "type": "long",
                                "desc": ""
                            }
                        ],
                        "ret": "void",
                        "desc": "Operation exposed for management"
                    },
                    "debugInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Operation exposed for management"
                    }
                },
                "attr": {
                    "HistorySize": {
                        "rw": false,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "MaxDebugEntries": {
                        "rw": true,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "HistoryMaxEntries": {
                        "rw": true,
                        "type": "int",
                        "desc": "Attribute exposed for management"
                    },
                    "Debug": {
                        "rw": true,
                        "type": "boolean",
                        "desc": "Attribute exposed for management"
                    }
                },
                "class": "org.jolokia.backend.Config",
                "desc": "Information on the management interface of the MBean"
            },
            "type=Discovery": {
                "op": {
                    "lookupAgentsWithTimeout": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "java.util.List",
                        "desc": "Operation exposed for management"
                    },
                    "lookupAgentsWithTimeoutAndMulticastAddress": {
                        "args": [
                            {
                                "name": "p1",
                                "type": "int",
                                "desc": ""
                            },
                            {
                                "name": "p2",
                                "type": "java.lang.String",
                                "desc": ""
                            },
                            {
                                "name": "p3",
                                "type": "int",
                                "desc": ""
                            }
                        ],
                        "ret": "java.util.List",
                        "desc": "Operation exposed for management"
                    },
                    "lookupAgents": {
                        "args": [],
                        "ret": "java.util.List",
                        "desc": "Operation exposed for management"
                    }
                },
                "class": "org.jolokia.discovery.JolokiaDiscovery",
                "desc": "Information on the management interface of the MBean"
            },
            "qualifier=hawtio,type=ServerHandler": {
                "op": {
                    "mBeanServersInfo": {
                        "args": [],
                        "ret": "java.lang.String",
                        "desc": "Operation exposed for management"
                    }
                },
                "class": "org.jolokia.backend.MBeanServerHandler",
                "desc": "Information on the management interface of the MBean"
            }
        }
    },
    "timestamp": 1642599814,
    "status": 200
}